@model Everestfcsweb.Models.SingleStationShiftData
@{
    ViewData["Title"] = "Addsystemstationshift";
    var Systemstationstaff = ViewData["Systemstationstafflists"] as List<SelectListItem>;
    var SystemProduct = ViewData["SystemProductList"] as List<SelectListItem>;
    var SystemWetProduct = ViewData["SystemWetProductList"] as List<SelectListItem>;
    var SystemDryProduct = ViewData["SystemDryProductList"] as List<SelectListItem>;
    var SystemCustomers = ViewData["SystemCustomersList"] as List<SelectListItem>;
    var Customerequipment = ViewData["CustomerequipmentList"] as List<SelectListItem>;
    var SystemPaymentmodes = ViewData["SystemPaymentmodes"] as List<SelectListItem>;
    var SystemBankPaymentmodes = ViewData["SystemBankPaymentmodes"] as List<SelectListItem>;
    var SystemSuppliers = ViewData["SystemSupplierslists"] as List<SelectListItem>;
    var SystemTanks = ViewData["SystemTankslists"] as List<SelectListItem>;
}
@if (Model != null)
{
    <div class="row">
        <div class="col-sm-12">
            <div class="card" style="border: none; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);">
                <div class="card-header" style="background-color: #f8f9fa; border-bottom: 1px solid #dee2e6;">
                    <div class="row">
                        <div class="col-sm-12">
                            <h6 class="font-weight-bold text-sm card-title text-uppercase">@Model.LocationData Shift Management Summary</h6>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-12">
                            <input asp-for="@Model.ShiftId" id="SystemstationShiftId" hidden />
                            <input asp-for="@Model.StationId" id="SystemstationId" hidden />
                            <input asp-for="@Model.ShiftStatus" id="SystemStationShiftStatusId" hidden />
                            <input asp-for="@Model.ShiftReference" id="SystemStationShiftShiftReferenceId" hidden />
                        </div>
                        <div class="col-sm-2">
                            <div class="form-group">
                                <label class="font-weight-light">Shift Code</label>
                                <input class="form-control form-control-sm" id="SystemstationshiftcodeId" asp-for="@Model.ShiftCode" readonly />
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <div class="form-group">
                                <label class="font-weight-light">Date Time</label>
                                <input class="form-control form-control-sm" type="date" id="SystemstationshiftdatetimeId" asp-for="@Model.ShiftDateTime" readonly />
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <div class="form-group">
                                <label class="font-weight-light">Location</label>
                                <input class="form-control form-control-sm" id="SystemstationshiftlocationId" asp-for="@Model.LocationData" readonly />
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <div class="form-group">
                                <label class="font-weight-light">Shift Type</label>
                                <select class="form-control form-control-sm font-weight-light" id="ShiftcategoryId" asp-for="@Model.ShiftCategory">
                                    <option value="">--select--</option>
                                    <option value="Dayshift">Day Shift</option>
                                    <option value="Nightshift">Night Shift</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-2" hidden>
                            <div class="form-group">
                                <label class="font-weight-light">Cash A/C</label>
                                <select type="number" class="form-control form-control-sm font-weight-light" id="StationcashoraccountId" readonly>
                                    <option value="CashinAccount">CashinAccount</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <div class="form-group">
                                <label class="font-weight-light">Expected Shift Cash</label>
                                <input type="number" class="form-control form-control-sm font-weight-light" id="StationshiftexpectedcashId" asp-for="@Model.ShiftTotalAmount" readonly />
                            </div>
                        </div>
                        <div class="col-sm-2">
                            <div class="form-group">
                                <label class="font-weight-light">Shift Memo</label>
                                <input class="form-control form-control-sm font-weight-light" id="SystemStationShiftReferenceId" asp-for="@Model.ShiftReference" />
                            </div>
                        </div>
                    </div>
                    @if (Model.ShiftId >= 0)
                    {
                        <div class="row" hidden>
                            <div class="col-sm-2">
                                <div class="form-group">
                                    <label class="font-weight-light">Expected Tank Sale</label>
                                    <input type="number" class="form-control form-control-sm font-weight-light" id="StationshiftexpectedtankcashId" asp-for="@Model.ExpectedTankAmount" readonly />
                                </div>
                            </div>
                            <div class="col-sm-2">
                                <div class="form-group">
                                    <label class="font-weight-light">Expected Pump Sale</label>
                                    <input type="number" class="form-control form-control-sm font-weight-light" id="StationshiftexpectedpumpcashId" asp-for="@Model.ExpectedPumpAmount" readonly />
                                </div>
                            </div>
                            <div class="col-sm-2">
                                <div class="form-group">
                                    <label class="font-weight-light">Gain/Loss</label>
                                    <input type="number" class="form-control form-control-sm font-weight-light" id="StationshiftgainlosscashId" asp-for="@Model.GainLoss" readonly />
                                </div>
                            </div>
                            <div class="col-sm-2">
                                <div class="form-group">
                                    <label class="font-weight-light">% Gain/Loss</label>
                                    <input type="number" class="form-control form-control-sm font-weight-light" id="StationshiftpercentagegainlosscashId" asp-for="@Model.PercentGainLoss" readonly />
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label class="font-weight-light">Shift Memo</label>
                                    <input class="form-control form-control-sm font-weight-light" id="SystemStationShiftReferenceId" asp-for="@Model.ShiftReference" />
                                </div>
                            </div>
                        </div>
                    }

                    <div class="row">
                        <div class="col-sm-12">
                            <ul class="nav nav-tabs card-header-tabs nowrap text-nowrap" id="myTab" role="tablist">
                                <li class="nav-item" role="presentation" style="flex: 1;">
                                    <button class="nav-link active" id="tab1-tab" data-toggle="tab" data-target="#ShiftPumpReadings" type="button" role="tab" aria-controls="tab1" aria-selected="true" style="color: #495057; font-weight: 500; width: 100%;"><i class="fas fa-pump"></i>Pump Readings</button>
                                </li>
                                <li class="nav-item" role="presentation" style="flex: 1;">
                                    <button class="nav-link" id="tab2-tab" data-toggle="tab" data-target="#ShiftTankReadings" type="button" role="tab" aria-controls="tab2" aria-selected="false" style="color: #495057; font-weight: 500; width: 100%;">Tank Readings</button>
                                </li>
                                <li class="nav-item" role="presentation" style="flex: 1;">
                                    <button class="nav-link" id="tab3-tab" data-toggle="tab" data-target="#ShiftLubricants" type="button" role="tab" aria-controls="tab3" aria-selected="false" style="color: #495057; font-weight: 500; width: 100%;">Lube Readings</button>
                                </li>
                                <li class="nav-item" role="presentation" style="flex: 1;">
                                    <button class="nav-link" id="tab4-tab" data-toggle="tab" data-target="#ShiftLpgandAccessories" type="button" role="tab" aria-controls="tab4" aria-selected="false" style="color: #495057; font-weight: 500; width: 100%;">Lpg & Accessories</button>
                                </li>
                                <li class="nav-item" role="presentation" style="flex: 1;">
                                    <button class="nav-link" id="tab5-tab" data-toggle="tab" data-target="#ShiftSparePartAccessories" type="button" role="tab" aria-controls="tab5" aria-selected="false" style="color: #495057; font-weight: 500; width: 100%;">Spare Parts</button>
                                </li>
                                <li class="nav-item" role="presentation" style="flex: 1;">
                                    <button class="nav-link" id="tab6-tab" data-toggle="tab" data-target="#ShiftCarWash" type="button" role="tab" aria-controls="tab6" aria-selected="false" style="color: #495057; font-weight: 500; width: 100%;">Car Wash</button>
                                </li>
                                <li class="nav-item" role="presentation" style="flex: 1;">
                                    <button class="nav-link" id="tab7-tab" data-toggle="tab" data-target="#ShiftCreditInvoices" type="button" role="tab" aria-controls="tab7" aria-selected="false" style="color: #495057; font-weight: 500; width: 100%;">Credit Invoice</button>
                                </li>
                                <li class="nav-item" role="presentation" style="flex: 1;">
                                    <button class="nav-link" id="tab8-tab" data-toggle="tab" data-target="#ShiftPurchasess" type="button" role="tab" aria-controls="tab8" aria-selected="false" style="color: #495057; font-weight: 500; width: 100%;">Purchases</button>
                                </li>
                                <li class="nav-item" role="presentation" style="flex: 1;">
                                    <button class="nav-link" id="tab9-tab" data-toggle="tab" data-target="#ShiftCashDrops" type="button" role="tab" aria-controls="tab9" aria-selected="false" style="color: #495057; font-weight: 500; width: 100%;">Cash Collections</button>
                                </li>
                            </ul>
                        </div>
                    </div>

                    <div class="tab-content" style="padding: 20px;">
                        <div class="tab-pane fade show active" id="ShiftPumpReadings" role="tabpanel" aria-labelledby="tab1-tab">
                            <div class="row">
                                <div class="col-sm-12 table-responsive">
                                    <table class="table table-bordered table-striped compact table-sm nowrap text-nowrap" id="AllsystemDataTables">
                                        <thead>
                                            <tr>
                                                <th hidden></th>
                                                <th hidden></th>
                                                <th hidden></th>
                                                <th hidden></th>
                                                <th hidden></th>
                                                <th hidden></th>
                                                <th>HOSE</th>
                                                <th>CASHIER/ATTENDANT</th>
                                                <th>PUMP PRICE</th>
                                                <th>OPENING SHILLING</th>
                                                <th>OPENING ELECTRONIC</th>
                                                <th>OPENING MANUAL</th>
                                                <th>CLOSING SHILLING</th>
                                                <th>CLOSING ELECTRONIC</th>
                                                <th>CLOSING MANUAL</th>
                                                <th>TESTING (RTT)</th>
                                                <th>LITERS ELECTRONIC</th>
                                                <th>LITERS MANUAL</th>
                                                <th>TOTAL SHILLING</th>
                                                <th>AMOUNT ELECTRONIC</th>
                                                <th>AMOUNT MANUAL</th>
                                                <th>DIFFERENCE SHILLING </th>
                                                <th>DIFFERENCE LITERS </th>
                                                <th>RTT AMOUNT </th>
                                                <th>TOTAL AMOUNT </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model.ShiftPumpReading != null)
                                            {
                                                foreach (var data in Model.ShiftPumpReading)
                                                {
                                                    <tr>
                                                        <td hidden>@data.ShiftPumpReadingId</td>
                                                        <td hidden>@data.ShiftId</td>
                                                        <td hidden>@data.NozzleId</td>
                                                        <td hidden>@data.PumpId</td>
                                                        <td hidden>@data.ProductVariationId</td>
                                                        <td hidden>@data.Productvariationname</td>
                                                        <td>@data.Warehouse</td>
                                                        <td>
                                                            <select class="form-control form-control-sm font-weight-light select2 pump-cashier-attendant" id="pump-cashier-attendant" asp-for="@data.AttendantId" asp-items="@Systemstationstaff">
                                                                <option value="">--select--</option>
                                                            </select>
                                                        </td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light pump-product-price" value="@data.ProductPrice" readonly /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light pump-opening-shilling" value="@data.OpeningShilling" @((Model.HasPrevious && data.OpeningShilling != 0) ? "readonly" : "") /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light pump-opening-electronic" value="@data.OpeningElectronic" @((Model.HasPrevious && data.OpeningElectronic!=0) ? "readonly" : "") /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light pump-opening-manual" value="@data.OpeningManual" @((Model.HasPrevious && data.OpeningManual!=0) ? "readonly" : "") /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light pump-closing-shilling" value="@data.ClosingShilling" /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light pump-closing-electronic" value="@data.ClosingElectronic" /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light pump-closing-manual" value="@data.ClosingManual" /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light pump-testing-rtt" value="@data.TestingRtt" /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light pump-electronic-sold" value="@data.ElectronicSold" readonly /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light pump-manual-manualsold" value="@data.ManualSold" readonly /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light pump-total-shilling" value="@data.TotalShilling" readonly /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light pump-electronic-amount" value="@data.ElectronicAmount" readonly /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light pump-manual-amount" value="@data.ManualAmount" readonly /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light pump-shilling-difference" value="@data.ShillingDifference" readonly /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light pump-liters-difference" value="@data.LitersDifference" readonly /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light pump-rtt-amount" value="@data.PumpRttAmount" readonly /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light pump-total-amount" value="@data.TotalShilling" readonly /></td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="ShiftTankReadings" role="tabpanel" aria-labelledby="tab2-tab">
                            <div class="row">
                                <div class="col-sm-12 table-responsive">
                                    <table class="table table-bordered table-striped compact table-sm nowrap text-nowrap w-100" id="AllsystemDataTables1">
                                        <thead>
                                            <tr>
                                                <th hidden></th>
                                                <th hidden></th>
                                                <th hidden></th>
                                                <th>TANK</th>
                                                <th>CASHIER/ATTENDANT</th>
                                                <th>OPENING QUANTITY</th>
                                                <th>CLOSING QUANTITY</th>
                                                <th>QUANTITY SOLD</th>
                                                <th>PRODUCT PRICE</th>
                                                <th>AMOUNT  SOLD</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model.ShiftTankReading != null)
                                            {
                                                foreach (var data in Model.ShiftTankReading)
                                                {
                                                    <tr>
                                                        <td hidden>@data.ShiftTankReadingId</td>
                                                        <td hidden>@data.ShiftId</td>
                                                        <td hidden>@data.TankId</td>
                                                        <td>@data.TankName</td>
                                                        <td>
                                                            <select class="form-control form-control-sm font-weight-light select2 tank-cashier-attendant" id="tank-cashier-attendant" asp-for="@data.AttendantId" asp-items="@Systemstationstaff">
                                                                <option value="">--select-</option>
                                                            </select>
                                                        </td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light tank-opening-quantity" value="@data.OpeningQuantity" @((Model.HasPrevious && data.OpeningQuantity != 0) ? "readonly" : "") /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light tank-closing-quantity" value="@data.ClosingQuantity" /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light tank-quantity-sold" value="@data.QuantitySold" readonly /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light tank-product-price" value="@data.ProductPrice" readonly /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light tank-amount-sold" value="@data.AmountSold" readonly /></td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="ShiftLubricants" role="tabpanel" aria-labelledby="tab3-tab">
                            <div class="row">
                                <div class="col-sm-12 table-responsive">
                                    <table class="table table-bordered table-striped compact table-sm w-100" id="AllsystemDataTables2">
                                        <thead>
                                            <tr>
                                                <th hidden></th>
                                                <th hidden></th>
                                                <th hidden></th>
                                                <th>PRODUCT</th>
                                                <th>CASHIER/ATTENDANT</th>
                                                <th>OPENING UNITS</th>
                                                <th>CLOSING UNITS</th>
                                                <th>UNITS SOLD</th>
                                                <th>UNIT PRICE</th>
                                                <th>AMOUNT SOLD</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model.ShiftLubeReading != null)
                                            {
                                                foreach (var data in Model.ShiftLubeReading.Where(x => x.CategoryName == "Lubricants"))
                                                {
                                                    <tr>
                                                        <td hidden>@data.ShiftLubeLpgId</td>
                                                        <td hidden>@data.ShiftId</td>
                                                        <td hidden>@data.ProductVariationId</td>
                                                        <td>@data.ProductVariationName</td>
                                                        <td>
                                                            <select class="form-control form-control-sm font-weight-light select2 lubes-cashier-attendant" id="lubes-cashier-attendant" asp-for="@data.AttendantId" asp-items="@Systemstationstaff">
                                                                <option value="">--select-</option>
                                                            </select>
                                                        </td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light lubes-opening-units" value="@data.OpeningUnits" @((Model.HasPrevious && data.OpeningUnits!=0) ? "readonly" : "") /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light lubes-closing-units" value="@data.ClosingUnits" /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light lubes-units-sold" value="@data.UnitsSold" readonly /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light lubes-unit-price" value="@data.ProductPrice" readonly /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light lubes-amount-sold" value="@data.UnitsTotal" readonly /></td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="ShiftLpgandAccessories" role="tabpanel" aria-labelledby="tab4-tab">
                            <div class="row">
                                <div class="col-sm-12 table-responsive">
                                    <table class="table table-bordered table-striped compact table-sm w-100" id="AllsystemDataTables3">
                                        <thead>
                                            <tr>
                                                <th hidden></th>
                                                <th hidden></th>
                                                <th hidden></th>
                                                <th>PRODUCT</th>
                                                <th>CASHIER/ATTENDANT</th>
                                                <th>OPENING UNITS</th>
                                                <th>CLOSING UNITS</th>
                                                <th>UNITS SOLD</th>
                                                <th>UNIT PRICE</th>
                                                <th>AMOUNT SOLD</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model.ShiftLubeReading != null)
                                            {
                                                foreach (var data in Model.ShiftLubeReading.Where(x => x.CategoryName == "LPG and Accessories"))
                                                {
                                                    <tr>
                                                        <td hidden>@data.ShiftLubeLpgId</td>
                                                        <td hidden>@data.ShiftId</td>
                                                        <td hidden>@data.ProductVariationId</td>
                                                        <td>@data.ProductVariationName</td>
                                                        <td>
                                                            <select class="form-control form-control-sm font-weight-light select2 lpg-cashier-attendant" id="lpg-cashier-attendant" asp-for="@data.AttendantId" asp-items="@Systemstationstaff">
                                                                <option value="">--select-</option>
                                                            </select>
                                                        </td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light lpg-opening-units" value="@data.OpeningUnits" @((Model.HasPrevious && data.OpeningUnits!=0) ? "readonly" : "") /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light lpg-closing-units" value="@data.ClosingUnits" /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light lpg-units-sold" value="@data.UnitsSold" readonly /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light lpg-unit-price" value="@data.ProductPrice" readonly /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light lpg-amount-sold" value="@data.UnitsTotal" readonly /></td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="ShiftSparePartAccessories" role="tabpanel" aria-labelledby="tab5-tab">
                            <div class="row">
                                <div class="col-sm-12 table-responsive">
                                    <table class="table table-bordered table-striped compact table-sm w-100" id="AllsystemDataTables4">
                                        <thead>
                                            <tr>
                                                <th hidden></th>
                                                <th hidden></th>
                                                <th hidden></th>
                                                <th>PRODUCT</th>
                                                <th>CASHIER/ATTENDANT</th>
                                                <th>OPENING UNITS</th>
                                                <th>CLOSING UNITS</th>
                                                <th>UNITS SOLD</th>
                                                <th>UNIT PRICE</th>
                                                <th>AMOUNT SOLD</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model.ShiftLubeReading != null)
                                            {
                                                foreach (var data in Model.ShiftLubeReading.Where(x => x.CategoryName == "SpareParts"))
                                                {
                                                    <tr>
                                                        <td hidden>@data.ShiftLubeLpgId</td>
                                                        <td hidden>@data.ShiftId</td>
                                                        <td hidden>@data.ProductVariationId</td>
                                                        <td>@data.ProductVariationName</td>
                                                        <td>
                                                            <select class="form-control form-control-sm font-weight-light select2 spare-cashier-attendant" id="spare-cashier-attendant" asp-for="@data.AttendantId" asp-items="@Systemstationstaff">
                                                                <option value="">--select-</option>
                                                            </select>
                                                        </td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light spare-opening-units" value="@data.OpeningUnits" @((Model.HasPrevious && data.OpeningUnits!=0) ? "readonly" : "") /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light spare-closing-units" value="@data.ClosingUnits" /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light spare-units-sold" value="@data.UnitsSold" readonly /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light spare-unit-price" value="@data.ProductPrice" readonly /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light spare-amount-sold" value="@data.UnitsTotal" readonly /></td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="ShiftCarWash" role="tabpanel" aria-labelledby="tab6-tab">

                            <div class="row">
                                <div class="col-sm-12 table-responsive">
                                    <table class="table table-bordered table-striped compact table-sm w-100" id="AllsystemDataTables5">
                                        <thead>
                                            <tr>
                                                <th hidden></th>
                                                <th hidden></th>
                                                <th hidden></th>
                                                <th>PRODUCT</th>
                                                <th>CASHIER/ATTENDANT</th>
                                                <th>OPENING UNITS</th>
                                                <th>CLOSING UNITS</th>
                                                <th>UNITS SOLD</th>
                                                <th>UNIT PRICE</th>
                                                <th>AMOUNT SOLD</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model.ShiftLubeReading != null)
                                            {
                                                foreach (var data in Model.ShiftLubeReading.Where(x => x.CategoryName == "Carwash" || x.CategoryName == "Services"))
                                                {
                                                    <tr>
                                                        <td hidden>@data.ShiftLubeLpgId</td>
                                                        <td hidden>@data.ShiftId</td>
                                                        <td hidden>@data.ProductVariationId</td>
                                                        <td>@data.ProductVariationName</td>
                                                        <td>
                                                            <select class="form-control form-control-sm font-weight-light select2 carwash-cashier-attendant" id="carwash-cashier-attendant" asp-for="@data.AttendantId" asp-items="@Systemstationstaff">
                                                                <option value="">--select-</option>
                                                            </select>
                                                        </td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light carwash-opening-units" value="@data.OpeningUnits" @((Model.HasPrevious && data.OpeningUnits!=0) ? "readonly" : "") /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light carwash-closing-units" value="@data.ClosingUnits" /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light carwash-units-sold" value="@data.UnitsSold" readonly /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light carwash-unit-price" value="@data.ProductPrice" readonly /></td>
                                                        <td><input type="number" class="form-control form-control-sm font-weight-light carwash-amount-sold" value="@data.UnitsTotal" readonly /></td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="ShiftCreditInvoices" role="tabpanel" aria-labelledby="tab7-tab">
                            <div class="row">
                                <div class="col-sm-2" hidden>
                                    <div class="form-group">
                                        <label class="font-weight-light">Shift Invoice Id</label>
                                        <input class="form-control form-control-sm" id="CreditInvoiceId" readonly />
                                    </div>
                                </div>
                                <div class="col-sm-2">
                                    <div class="form-group">
                                        <label class="font-weight-light">Cashier/Attendant</label>
                                        <select class="form-control form-control-sm font-weight-light select2" id="CreditInvoiceCashierId" asp-items="@Systemstationstaff">
                                            <option value="">--select-</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-sm-2">
                                    <div class="form-group">
                                        <label class="font-weight-light">Customer</label>
                                        <select class="form-control form-control-sm font-weight-light select2" onchange="Getsystemcustomerdetaildata(this.value)" id="CreditInvoiceSearchCustomerId" asp-items="@SystemCustomers">
                                            <option value="">--select--</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-sm-2">
                                    <div class="form-group">
                                        <label class="font-weight-light">Product</label>
                                        <select class="form-control form-control-sm font-weight-light select2" onchange="Getdryproductdetail(this.value)" id="CreditInvoiceProductVariationId" asp-items="@SystemProduct">
                                            <option value="">--select--</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-sm-2" id="CustomerEquipmentRowId">
                                    <div class="form-group">
                                        <label class="font-weight-light"> Equipment</label>
                                        <select class="form-control form-control-sm font-weight-light select2" id="CreditInvoiceCustomerEquipmentId" asp-items="@Customerequipment">
                                            <option value="">--select--</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-sm-2">
                                    <div class="form-group">
                                        <label class="font-weight-light">Item Price</label>
                                        <input class="form-control form-control-sm" id="CreditInvoiceItemPriceId" readonly />
                                    </div>
                                </div>
                                <div class="col-sm-2">
                                    <div class="form-group">
                                        <label class="font-weight-light">Discount</label>
                                        <input class="form-control form-control-sm" id="CreditInvoiceItemDiscountId" readonly />
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-2">
                                    <div class="form-group">
                                        <label class="font-weight-light">Total Amount</label>
                                        <input class="form-control form-control-sm" id="CreditInvoiceItemtotaAmountId" />
                                    </div>
                                </div>
                                <div class="col-sm-2">
                                    <div class="form-group">
                                        <label class="font-weight-light">Quantity</label>
                                        <input class="form-control form-control-sm" type="number" readonly id="CreditInvoiceItemQuantityId" />
                                    </div>
                                </div>
                                <div class="col-sm-2" hidden>
                                    <div class="form-group">
                                        <label class="font-weight-light">Vat</label>
                                        <input class="form-control form-control-sm" id="CreditInvoiceVatvalueId" />
                                    </div>
                                </div>
                                <div class="col-sm-2" hidden>
                                    <div class="form-group">
                                        <label class="font-weight-light">Vat Amount</label>
                                        <input class="form-control form-control-sm" id="CreditInvoiceVatTotalId" />
                                    </div>
                                </div>
                                <div class="col-sm-2">
                                    <div class="form-group">
                                        <label class="font-weight-light">Order Number</label>
                                        <input class="form-control form-control-sm" id="CreditInvoiceOrderNumberId" />
                                    </div>
                                </div>
                                <div class="col-sm-2">
                                    <div class="form-group">
                                        <label class="font-weight-light">Reciept Number</label>
                                        <input class="form-control form-control-sm" id="CreditInvoiceRecieptNumberId" />
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label class="font-weight-light">Reference</label>
                                        <input class="form-control form-control-sm" type="text" id="CreditInvoiceReferenceId" />
                                    </div>
                                </div>
                                <div class="col-sm-1">
                                    <div class="form-group">
                                        <label class="font-weight-light"></label>
                                        @(Model.ShiftStatus == 0 ? Html.Raw("<button class='btn btn-xs btn-info btn-block text-white font-weight-bold text-uppercase mt-2' onclick='addCreditInvoice()'>SAVE</button>") : Html.Raw("<button class='btn btn-xs btn-info btn-block text-white font-weight-bold text-uppercase mt-2'>SAVE</button>"))
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-sm-12 table-responsive">
                                    <table class="table table-bordered table-striped compact table-sm table-responsive-sm nowrap text-nowrap font-weight-light w-100" id="ShiftCreditInvoiceTable">
                                        <thead>
                                            <tr>
                                                <th hidden></th>
                                                <th hidden></th>
                                                <th hidden></th>
                                                <th>CASHIER/ATTENDANT</th>
                                                <th hidden></th>
                                                <th>CUSTOMER</th>
                                                <th hidden></th>
                                                <th>EQUIPMENT</th>
                                                <th hidden></th>
                                                <th>PRODUCT</th>
                                                <th>UNITS</th>
                                                <th>PRICE</th>
                                                <th hidden>DISCOUNT</th>
                                                <th>TOTAL</th>
                                                <th>VAT TOTAL</th>
                                                <th>ORDER #</th>
                                                <th>RECEIPT #</th>
                                                <th>REFERENCE</th>
                                                <th class="text-right">ACTION</th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="ShiftPurchasess" role="tabpanel" aria-labelledby="tab8-tab">
                            <div class="row">
                                <div class="col-sm-12">
                                    <h6 class="font-weight-bold text-sm card-title text-uppercase">Staion Shift Purchases Summary</h6>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-sm-12">
                                    <ul class="nav nav-tabs card-header-tabs nav-fill" id="myTab" role="tablist">
                                        <li class="nav-item" role="presentation">
                                            <button class="nav-link active btn-block" id="tab1-tab" data-toggle="tab" data-target="#StationShiftFuelPurchases" type="button" role="tab" aria-controls="StationShiftFuelPurchases" aria-selected="true">Fuel Purchases</button>
                                        </li>
                                        <li class="nav-item" role="presentation">
                                            <button class="nav-link btn-block" id="tab2-tab" data-toggle="tab" data-target="#StationShiftOthersPurchases" type="button" role="tab" aria-controls="StationShiftOthersPurchases" aria-selected="false">Others Purchases</button>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <div class="tab-content" style="padding-top: 20px;">
                                <div class="tab-pane fade show active" id="StationShiftFuelPurchases" role="tabpanel" aria-labelledby="tab1-tab">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div class="card">
                                                <div class="card-header">
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <h6 class="font-weight-bold text-sm card-title text-uppercase">Fuel Purchase</h6>
                                                        </div>
                                                    </div>
                                                    <div class="row" hidden>
                                                        <input class="form-control form-control-sm" id="SystemWetPurchaseId" asp-for="@Model.WetstockPurchases.PurchaseId" />
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-2" hidden>
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Purchase Id</label>
                                                                <input class="form-control form-control-sm" id="SystemWetpurchaseId" readonly />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Invoice #</label>
                                                                <input class="form-control form-control-sm" id="SystemWetInvoiceNumberId" asp-for="@Model.WetstockPurchases.InvoiceNumber" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Invoice Amount</label>
                                                                <input class="form-control form-control-sm" id="SystemWetInvoiceAmountId" asp-for="@Model.WetstockPurchases.InvoiceAmount" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Transport Amount</label>
                                                                <input class="form-control form-control-sm" id="SystemWetTransportAmountId" asp-for="@Model.WetstockPurchases.TransportAmount" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Supplier</label>
                                                                <select class="form-control form-control-sm font-weight-light select2" id="SystemWetsupplierId" asp-items="@SystemSuppliers" asp-for="@Model.WetstockPurchases.SupplierId">
                                                                    <option value="">---Select---</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-4">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Invoice Date</label>
                                                                <input class="form-control form-control-sm" type="date" id="SystemWetInvoiceDateId" asp-for="@Model.WetstockPurchases.InvoiceDate" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-4">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Truck Number</label>
                                                                <input class="form-control form-control-sm" id="SystemWetInvoiceTruckNumberId" asp-for="@Model.WetstockPurchases.TruckNumber" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-4">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Driver Name</label>
                                                                <input class="form-control form-control-sm" id="SystemWetInvoiceDriverNameId" asp-for="@Model.WetstockPurchases.DriverName" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <label class="font-weight-light">Invoice Item(s) Entry <span class="required-sup">*</span></label>
                                                            <div class="row">
                                                                <div class="col-sm-2" hidden>
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Purchase Item Id</label>
                                                                        <input class="form-control form-control-sm" id="SystemWetPurchaseItemId" readonly />
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-2">
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Tank</label>
                                                                        <select class="form-control form-control-sm font-weight-light select2" id="SystemWetTankId" asp-items="@SystemTanks">
                                                                            <option value="">---Select---</option>
                                                                        </select>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-2">
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Product</label>
                                                                        <select class="form-control form-control-sm font-weight-light select2" id="SystemWetProductVariationId" onchange="Getwetsupplierproductprice(this.value)" asp-items="@SystemWetProduct">
                                                                            <option value="">---Select---</option>
                                                                        </select>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-2">
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Dips Before Offload</label>
                                                                        <input class="form-control form-control-sm" type="number" id="DipsBeforeOffloadingId" />
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-2">
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Quantity Delivered</label>
                                                                        <input class="form-control form-control-sm" type="number" id="SystemWetproductquantityId" />
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-2">
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Dips After Offload</label>
                                                                        <input class="form-control form-control-sm" type="number" id="DipsAfterOffloadingId" />
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-2">
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Expected Quantity</label>
                                                                        <input class="form-control form-control-sm" readonly id="DipsExpectedAfterOffloadId" />
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="row">
                                                                <div class="col-sm-2">
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Gain/Loss</label>
                                                                        <input class="form-control form-control-sm" readonly id="GainLossAfterOffloadId" />
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-1">
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light nowrap text-nowrap">% Gain/Loss</label>
                                                                        <input class="form-control form-control-sm" readonly id="PercentageGainLossAfterOffloadId" />
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-2">
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Price</label>
                                                                        <input class="form-control form-control-sm" id="SystemWetproductpriceId" readonly />
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-1" hidden>
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Tax</label>
                                                                        <input class="form-control form-control-sm" id="SystemWetproducttaxId" />
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-1" hidden>
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Discount</label>
                                                                        <input class="form-control form-control-sm" id="SystemWetproductDiscountId" />
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-2">
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Gross Total</label>
                                                                        <input class="form-control form-control-sm" id="SystemWetPurchaseGTotalAmountId" />
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-2">
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Net Total</label>
                                                                        <input class="form-control form-control-sm" id="SystemWetPurchaseNTotalAmountId" readonly />
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-2">
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Tax Amount</label>
                                                                        <input class="form-control form-control-sm" id="SystemWetPurchaseTaxAmountId" readonly />
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-1">
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light text-right"></label>
                                                                        @(Model.ShiftStatus == 0 ? Html.Raw("<button class='btn btn-xs btn-info btn-block text-white font-weight-bold text-uppercase mt-2' onclick='addWetStockShiftPurchaseData()'>SAVE</button>") : Html.Raw("<button class='btn btn-xs btn-info btn-block text-white font-weight-bold text-uppercase mt-2'>SAVE</button>"))
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="row">
                                                                <div class="col-sm-12 table-responsive">
                                                                    <table class="table table-bordered table-striped compact table-sm table-responsive-sm nowrap text-nowrap font-weight-light w-100" id="ShiftWetStockPurchaseTable">
                                                                        <thead>
                                                                            <tr>
                                                                                <th hidden></th>
                                                                                <th hidden></th>
                                                                                <th hidden></th>
                                                                                <th>TANK NAME</th>
                                                                                <th hidden></th>
                                                                                <th>PRODUCT NAME</th>
                                                                                <th>DIPS BEFORE OFFLOADING</th>
                                                                                <th>PURCHASE QUANTITY</th>
                                                                                <th>DIPS AFTER OFFLOADING</th>
                                                                                <th>EXPECTED QUANTITY</th>
                                                                                <th>GAIN/LOSS</th>
                                                                                <th>% GAIN/LOSS</th>
                                                                                <th>PRICE</th>
                                                                                <th>TAX</th>
                                                                                <th>DISCOUNT</th>
                                                                                <th>GROSS TOTAL</th>
                                                                                <th>NET TOTAL</th>
                                                                                <th>TAX AMOUNT</th>
                                                                                <th class="text-right">ACTION</th>
                                                                            </tr>
                                                                        </thead>
                                                                    </table>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="tab-pane fade" id="StationShiftOthersPurchases" role="tabpanel" aria-labelledby="tab2-tab">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div class="card">
                                                <div class="card-header">
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <h6 class="font-weight-bold text-sm card-title text-uppercase">Lubes,LPG and Accessories Purchase</h6>
                                                        </div>
                                                    </div>
                                                    <div class="row" hidden>
                                                        <input class="form-control form-control-sm" id="SystemDryPurchaseId" asp-for="@Model.DrystockPurchases.PurchaseId" />
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-3">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Invoice #</label>
                                                                <input class="form-control form-control-sm" id="SystemDryInvoiceNumberId" asp-for="@Model.DrystockPurchases.InvoiceNumber" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Invoice Amount</label>
                                                                <input class="form-control form-control-sm" id="SystemDryInvoiceAmountId" asp-for="@Model.DrystockPurchases.InvoiceAmount" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Transport Amount</label>
                                                                <input class="form-control form-control-sm" id="SystemDryTransportAmountId" asp-for="@Model.DrystockPurchases.TransportAmount" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Supplier</label>
                                                                <select class="form-control form-control-sm font-weight-light select2" id="SystemDrysupplierId" asp-items="@SystemSuppliers" asp-for="@Model.DrystockPurchases.SupplierId">
                                                                    <option value="">---Select---</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-4">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Invoice Date</label>
                                                                <input class="form-control form-control-sm" type="date" id="SystemDryInvoiceDateId" asp-for="@Model.DrystockPurchases.InvoiceDate" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-4">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Truck Number</label>
                                                                <input class="form-control form-control-sm" id="SystemDryInvoiceTruckNumberId" asp-for="@Model.DrystockPurchases.TruckNumber" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-4">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Driver Name</label>
                                                                <input class="form-control form-control-sm" id="SystemDryInvoiceDriverNameId" asp-for="@Model.DrystockPurchases.DriverName" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <label class="font-weight-light">Invoice Item(s) Entry <span class="required-sup">*</span></label>
                                                            <div class="row">
                                                                <div class="col-sm-2" hidden>
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Purchase Item Id</label>
                                                                        <input class="form-control form-control-sm" id="SystemDryPurchaseItemId" readonly />
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-2">
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Product</label>
                                                                        <select class="form-control form-control-sm font-weight-light select2" id="SystemDryProductVariationId" onchange="Getdrysupplierproductprice(this.value)" asp-items="@SystemDryProduct">
                                                                            <option value="">---Select---</option>
                                                                        </select>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-2">
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Quantity</label>
                                                                        <input class="form-control form-control-sm" id="SystemDryproductquantityId" />
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-1">
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Price</label>
                                                                        <input class="form-control form-control-sm" id="SystemDryproductpriceId" readonly />
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-1" hidden>
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Tax</label>
                                                                        <input class="form-control form-control-sm" id="SystemDryproducttaxId" />
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-2">
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Gross Total</label>
                                                                        <input class="form-control form-control-sm" id="SystemDryPurchaseGTotalAmountId" />
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-2">
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Net Total</label>
                                                                        <input class="form-control form-control-sm" id="SystemDryPurchaseNTotalAmountId" readonly />
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-2">
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light">Tax Amount</label>
                                                                        <input class="form-control form-control-sm" id="SystemDryPurchaseTaxAmountId" readonly />
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-1">
                                                                    <div class="form-group">
                                                                        <label class="font-weight-light text-right"></label>
                                                                        @(Model.ShiftStatus == 0 ? Html.Raw("<button class='btn btn-xs btn-info btn-block text-white font-weight-bold text-uppercase mt-2' onclick='addDryStockShiftPurchaseData()'>SAVE</button>") : Html.Raw("<button class='btn btn-xs btn-info btn-block text-white font-weight-bold text-uppercase mt-2'>SAVE</button>"))
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="row">
                                                                <div class="col-sm-12 table-responsive">
                                                                    <table class="table table-bordered table-striped compact table-sm table-responsive-sm nowrap text-nowrap font-weight-light w-100" id="ShiftDryStockPurchaseTable">
                                                                        <thead>
                                                                            <tr>
                                                                                <th hidden>PURCHASEITEMID</th>
                                                                                <th hidden>PURCHASEID</th>
                                                                                <th hidden>PRODUCTVARIATIONID</th>
                                                                                <th>PRODUCT NAME</th>
                                                                                <th hidden>DIP BEFORE OFFLOAFING</th>
                                                                                <th>QUANTITY</th>
                                                                                <th hidden>DIP AFTER OFFLOAFING</th>
                                                                                <th hidden>EXPECTED QUANTITY</th>
                                                                                <th hidden>GAINLOSS</th>
                                                                                <th hidden>PERCENTAGE GAINLOSS</th>
                                                                                <th>PRICE</th>
                                                                                <th>TAX</th>
                                                                                <th>DISCOUNT</th>
                                                                                <th>GROSS TOTAL</th>
                                                                                <th>NET TOTAL</th>
                                                                                <th>TAX AMOUNT</th>
                                                                                <th class="text-right">ACTION</th>
                                                                            </tr>
                                                                        </thead>
                                                                    </table>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="ShiftCashDrops" role="tabpanel" aria-labelledby="tab9-tab">
                            <div class="row">
                                <div class="col-sm-12">
                                    <h6 class="font-weight-bold text-sm card-title text-uppercase">Cash Collection Summary</h6>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-sm-12">
                                    <ul class="nav nav-tabs card-header-tabs nav-fill" id="myTab" role="tablist">
                                        <li class="nav-item" role="presentation">
                                            <button class="nav-link active btn-block" id="tab1-tab" data-toggle="tab" data-target="#StationShiftExpenses" type="button" role="tab" aria-controls="StationShiftExpenses" aria-selected="true">Expenses</button>
                                        </li>
                                        <li class="nav-item" role="presentation">
                                            <button class="nav-link btn-block" id="tab2-tab" data-toggle="tab" data-target="#StationShiftMpesa" type="button" role="tab" aria-controls="StationShiftMpesa" aria-selected="false">Mpesa</button>
                                        </li>
                                        <li class="nav-item" role="presentation">
                                            <button class="nav-link btn-block" id="tab3-tab" data-toggle="tab" data-target="#StationShiftFuelCard" type="button" role="tab" aria-controls="StationShiftFuelCard" aria-selected="false">Fuel Card</button>
                                        </li>
                                        <li class="nav-item" role="presentation">
                                            <button class="nav-link btn-block" id="tab4-tab" data-toggle="tab" data-target="#StationShiftVisaMasterCard" type="button" role="tab" aria-controls="StationShiftVisaMasterCard" aria-selected="false">Merchants</button>
                                        </li>
                                        <li class="nav-item" role="presentation">
                                            <button class="nav-link btn-block" id="tab5-tab" data-toggle="tab" data-target="#StationShiftTopups" type="button" role="tab" aria-controls="StationShiftTopups" aria-selected="false">Topups</button>
                                        </li>
                                        <li class="nav-item" role="presentation">
                                            <button class="nav-link btn-block" id="tab6-tab" data-toggle="tab" data-target="#StationShiftPayments" type="button" role="tab" aria-controls="StationShiftPayments" aria-selected="false">Payments</button>
                                        </li>
                                    </ul>
                                </div>
                            </div>

                            <div class="tab-content" style="padding-top: 20px;">
                                <div class="tab-pane fade show active" id="StationShiftExpenses" role="tabpanel" aria-labelledby="tab1-tab">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div class="card">
                                                <div class="card-header">
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <h6 class="font-weight-bold text-sm card-title text-uppercase">Expenses Cash Summary</h6>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-2" hidden>
                                                            <div class="form-group">
                                                                <label class="font-weight-light">VoucherId</label>
                                                                <input class="form-control form-control-sm" id="ExpensesCollectionVoucherId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Cashier/Attendant</label>
                                                                <select class="form-control form-control-sm font-weight-light select2" id="ExpensesCollectionCashierId" asp-items="@Systemstationstaff">
                                                                    <option value="">--select-</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Mode</label>
                                                                <select class="form-control form-control-sm font-weight-light select2" id="ExpensesCollectionModeId" asp-items="@SystemPaymentmodes">
                                                                    <option value="">--select--</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Expense Name</label>
                                                                <input class="form-control form-control-sm" id="ExpensesCollectionTypeNameId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Amount</label>
                                                                <input class="form-control form-control-sm" id="ExpensesCollectionAmountId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light"></label>
                                                                @(Model.ShiftStatus == 0 ? Html.Raw("<button class='btn btn-xs btn-info btn-block text-white font-weight-bold text-uppercase mt-2' onclick='addExpensesCollectionVoucher()'>SAVE</button>") : Html.Raw("<button class='btn btn-xs btn-info btn-block text-white font-weight-bold text-uppercase mt-2'>SAVE</button>"))
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="card-body table-responsive">
                                                    <table class="table table-bordered table-striped compact table-sm table-responsive-sm nowrap text-nowrap font-weight-light w-100" id="ShiftExpensesTable">
                                                        <thead>
                                                            <tr>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th>CASHIER/ATTENDANT</th>
                                                                <th hidden></th>
                                                                <th>MODE</th>
                                                                <th>EXPENSE NAME</th>
                                                                <th>EXPENSE AMOUNT</th>
                                                                <th class="text-right">ACTION</th>
                                                            </tr>
                                                        </thead>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="tab-pane fade" id="StationShiftMpesa" role="tabpanel" aria-labelledby="tab2-tab">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div class="card">
                                                <div class="card-header">
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <h6 class="font-weight-bold text-sm card-title text-uppercase">Mpesa Cash Collection Summary</h6>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-2" hidden>
                                                            <div class="form-group">
                                                                <label class="font-weight-light">MpesaCollectionId</label>
                                                                <input class="form-control form-control-sm" id="MpesaCollectionVoucherId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3" hidden>
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Mode</label>
                                                                <select class="form-control form-control-sm font-weight-light select2" id="MpesaCollectionModeId" readonly>
                                                                    <option value="@SystemPaymentmodes.Where(x=>x.Text=="MPesa").FirstOrDefault().Value">@SystemPaymentmodes.Where(x => x.Text == "MPesa").FirstOrDefault().Text</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Cashier/Attendant</label>
                                                                <select class="form-control form-control-sm font-weight-light select2" id="MpesaCollectionCashierId" asp-items="@Systemstationstaff">
                                                                    <option value="">--select-</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Product</label>
                                                                <select class="form-control form-control-sm font-weight-light select2" id="MpesaProductVariationId" onchange="Getmpesaproductpricedata(this.value)" asp-items="@SystemProduct">
                                                                    <option value="">---Select---</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Amount</label>
                                                                <input class="form-control form-control-sm" id="MpesaCollectionAmountId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-1">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Price</label>
                                                                <input class="form-control form-control-sm" readonly id="MpesaCollectionPriceId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-1">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Quantity</label>
                                                                <input class="form-control form-control-sm" readonly id="MpesaCollectionQuantityId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Discount</label>
                                                                <input class="form-control form-control-sm" readonly id="MpesaCollectionDiscountId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2" hidden>
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Vat</label>
                                                                <input class="form-control form-control-sm" readonly id="MpesaCollectionVatId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2" hidden>
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Vat Amount</label>
                                                                <input class="form-control form-control-sm" readonly id="MpesaCollectionVatAmountId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light"></label>
                                                                @(Model.ShiftStatus == 0 ? Html.Raw("<button class='btn btn-xs btn-info btn-block text-white font-weight-bold text-uppercase mt-2' onclick='addMpesaCollectionVoucher()'>SAVE</button>") : Html.Raw("<button class='btn btn-xs btn-info btn-block text-white font-weight-bold text-uppercase mt-2'>SAVE</button>"))
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="card-body table-responsive">
                                                    <table class="table table-bordered table-striped compact table-sm table-responsive-sm nowrap text-nowrap font-weight-light w-100" id="ShiftMpesaCollectionTable">
                                                        <thead>
                                                            <tr>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th>CASHIER</th>
                                                                <th hidden></th>
                                                                <th>MODE</th>
                                                                <th hidden></th>
                                                                <th>PRODUCT</th>
                                                                <th>PRICE</th>
                                                                <th>QUANTITY</th>
                                                                <th>DISCOUNT</th>
                                                                <th>AMOUNT</th>
                                                                <th>VAT AMOUNT</th>
                                                                <th class="text-right">ACTION</th>
                                                            </tr>
                                                        </thead>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="tab-pane fade" id="StationShiftFuelCard" role="tabpanel" aria-labelledby="tab3-tab">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div class="card">
                                                <div class="card-header">
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <h6 class="font-weight-bold text-sm card-title text-uppercase">Fuel Card Cash Collection Summary</h6>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-2" hidden>
                                                            <div class="form-group">
                                                                <label class="font-weight-light">FuelCardCollectionId</label>
                                                                <input class="form-control form-control-sm" id="FuelCardCollectionVoucherId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3" hidden>
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Mode</label>
                                                                <select class="form-control form-control-sm font-weight-light select2" id="FuelCardCollectionModeId" readonly>
                                                                    <option value="@SystemPaymentmodes.Where(x=>x.Text=="FuelCard" || x.Text=="Card").FirstOrDefault().Value">@SystemPaymentmodes.Where(x => x.Text == "FuelCard" || x.Text == "Card").FirstOrDefault().Text</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Cashier/Attendant</label>
                                                                <select class="form-control form-control-sm font-weight-light select2" id="FuelCardCollectionCashierId" asp-items="@Systemstationstaff">
                                                                    <option value="">--select-</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Product</label>
                                                                <select class="form-control form-control-sm font-weight-light select2" id="SystemFuelCardProductVariationId" onchange="Getfuelcardproductpricedata(this.value)" asp-items="@SystemProduct">
                                                                    <option value="">---Select---</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Amount</label>
                                                                <input class="form-control form-control-sm" id="FuelCardCollectionAmountId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-1">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Price</label>
                                                                <input class="form-control form-control-sm" readonly id="FuelCardCollectionPriceId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-1">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Quantity</label>
                                                                <input class="form-control form-control-sm" readonly id="FuelCardCollectionQuantityId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Discount</label>
                                                                <input class="form-control form-control-sm" readonly id="FuelCardCollectionDiscountId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2" hidden>
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Vat</label>
                                                                <input class="form-control form-control-sm" readonly id="FuelCardCollectionVatId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2" hidden>
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Vat Amount</label>
                                                                <input class="form-control form-control-sm" readonly id="FuelCardCollectionVatAmountId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light"></label>
                                                                @(Model.ShiftStatus == 0 ? Html.Raw("<button class='btn btn-xs btn-info btn-block text-white font-weight-bold text-uppercase mt-2' onclick='addFuelCardCollectionVoucher()'>SAVE</button>") : Html.Raw("<button class='btn btn-xs btn-info btn-block text-white font-weight-bold text-uppercase mt-2'>SAVE</button>"))
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="card-body table-responsive">
                                                    <table class="table table-bordered table-striped compact table-sm table-responsive-sm nowrap text-nowrap font-weight-light w-100" id="ShiftFuelCardCollectionTable">
                                                        <thead>
                                                            <tr>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th>CASHIER</th>
                                                                <th hidden></th>
                                                                <th>MODE</th>
                                                                <th hidden></th>
                                                                <th>PRODUCT</th>
                                                                <th>PRICE</th>
                                                                <th>QUANTITY</th>
                                                                <th>DISCOUNT</th>
                                                                <th>AMOUNT</th>
                                                                <th>Vat AMOUNT</th>
                                                                <th class="text-right">ACTION</th>
                                                            </tr>
                                                        </thead>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="tab-pane fade" id="StationShiftVisaMasterCard" role="tabpanel" aria-labelledby="tab4-tab">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div class="card">
                                                <div class="card-header">
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <h6 class="font-weight-bold text-sm card-title text-uppercase">Merchant Collection Summary</h6>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-3" hidden>
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Merchant Id</label>
                                                                <input class="form-control form-control-sm" type="number" id="MerchantCollectionVoucherId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Mode</label>
                                                                <select class="form-control form-control-sm font-weight-light select2" id="MerchantCollectionModeId" asp-items="@SystemBankPaymentmodes">
                                                                    <option value="">--select--</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Cashier/Attendant</label>
                                                                <select class="form-control form-control-sm font-weight-light select2" id="MerchantCollectionCashierId" asp-items="@Systemstationstaff">
                                                                    <option value="">--select-</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Product</label>
                                                                <select class="form-control form-control-sm font-weight-light select2" id="SystemMerchantProductVariationId" onchange="Getmerchantproductpricedata(this.value)" asp-items="@SystemProduct">
                                                                    <option value="">---Select---</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Amount</label>
                                                                <input class="form-control form-control-sm" type="number" id="MerchantCollectionAmountId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Price</label>
                                                                <input class="form-control form-control-sm" readonly id="MerchantCollectionPriceId" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Quantity</label>
                                                                <input class="form-control form-control-sm" readonly id="MerchantCollectionQuantityId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Discount</label>
                                                                <input class="form-control form-control-sm" readonly id="MerchantCollectionDiscountId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2" hidden>
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Vat</label>
                                                                <input class="form-control form-control-sm" readonly id="MerchantCollectionVatId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2" hidden>
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Vat Amount</label>
                                                                <input class="form-control form-control-sm" readonly id="MerchantCollectionVatAmountId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Card Number</label>
                                                                <input class="form-control form-control-sm" id="MerchantCollectionCardNumberId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Reciept Number</label>
                                                                <input class="form-control form-control-sm" id="MerchantCollectionReceiptNumberId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light"></label>
                                                                @(Model.ShiftStatus == 0 ? Html.Raw("<button class='btn btn-xs btn-info btn-block text-white font-weight-bold text-uppercase mt-2' onclick='addMerchantCollectionVoucher()'>SAVE</button>") : Html.Raw("<button class='btn btn-xs btn-info btn-block text-white font-weight-bold text-uppercase mt-2'>SAVE</button>"))
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="card-body table-responsive">
                                                    <table class="table table-bordered table-striped compact table-sm table-responsive-sm nowrap text-nowrap font-weight-light w-100" id="ShiftMerchantCollectionTable">
                                                        <thead>
                                                            <tr>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th>CASHIER</th>
                                                                <th hidden></th>
                                                                <th>MODE</th>
                                                                <th hidden></th>
                                                                <th>PRODUCT</th>
                                                                <th>PRICE</th>
                                                                <th>QUANTITY</th>
                                                                <th>DISCOUNT</th>
                                                                <th>AMOUNT</th>
                                                                <th>VAT AMOUNT</th>
                                                                <th>CARD NUMBER</th>
                                                                <th>RECIEPT NUMBER</th>
                                                                <th class="text-right">ACTION</th>
                                                            </tr>
                                                        </thead>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="tab-pane fade" id="StationShiftTopups" role="tabpanel" aria-labelledby="tab5-tab">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div class="card">
                                                <div class="card-header">
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <h6 class="font-weight-bold text-sm card-title text-uppercase">Topups</h6>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-3" hidden>
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Shift Topup Id</label>
                                                                <input class="form-control form-control-sm" id="shiftTopupId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-4">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Cashier/Attendant</label>
                                                                <select class="form-control form-control-sm font-weight-light select2" id="ShiftTopupCashierId" asp-items="@Systemstationstaff">
                                                                    <option value="">--select-</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Amount</label>
                                                                <input class="form-control form-control-sm" type="number" id="ShiftTopupAmountId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-3">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Reference</label>
                                                                <input class="form-control form-control-sm" id="ShiftTopupReferenceId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light"></label>
                                                                @(Model.ShiftStatus == 0 ? Html.Raw("<button class='btn btn-xs btn-info btn-block text-white font-weight-bold text-uppercase mt-2' onclick='addShiftTopupData()'>SAVE</button>") : Html.Raw("<button class='btn btn-xs btn-info btn-block text-white font-weight-bold text-uppercase mt-2'>SAVE</button>"))
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="card-body table-responsive">
                                                    <table class="table table-bordered table-striped compact table-sm table-responsive-sm nowrap text-nowrap font-weight-light w-100" id="ShiftTopupTable">
                                                        <thead>
                                                            <tr>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th>CASHIER/ATTENDANT</th>
                                                                <th>AMOUNT</th>
                                                                <th>REFERENCE</th>
                                                                <th class="text-right">ACTION</th>
                                                            </tr>
                                                        </thead>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="tab-pane fade" id="StationShiftPayments" role="tabpanel" aria-labelledby="tab5-tab">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div class="card">
                                                <div class="card-header">
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <h6 class="font-weight-bold text-sm card-title text-uppercase">Payments</h6>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-sm-3" hidden>
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Shift Payment Id</label>
                                                                <input class="form-control form-control-sm" id="ShiftPaymentId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Customer</label>
                                                                <select class="form-control form-control-sm font-weight-light select2" id="ShiftPayementCustomerId" asp-items="@SystemCustomers">
                                                                    <option value="">--select--</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Cashier/Attendant</label>
                                                                <select class="form-control form-control-sm font-weight-light select2" id="ShiftPaymentCashierId" asp-items="@Systemstationstaff">
                                                                    <option value="">--select--</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Mode</label>
                                                                <select class="form-control form-control-sm font-weight-light select2" id="ShiftPaymentModeId" asp-items="@SystemPaymentmodes">
                                                                    <option value="">--select--</option>
                                                                </select>
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Amount</label>
                                                                <input class="form-control form-control-sm" type="number" id="ShiftPaymentAmountId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light">Reference</label>
                                                                <input class="form-control form-control-sm" id="ShiftPaymentReferenceId" />
                                                            </div>
                                                        </div>
                                                        <div class="col-sm-2">
                                                            <div class="form-group">
                                                                <label class="font-weight-light"></label>
                                                                @(Model.ShiftStatus == 0 ? Html.Raw("<button class='btn btn-xs btn-info btn-block text-white font-weight-bold text-uppercase mt-2' onclick='addShiftPaymentData()'>SAVE</button>") : Html.Raw("<button class='btn btn-xs btn-info btn-block text-white font-weight-bold text-uppercase mt-2'>SAVE</button>"))
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="card-body table-responsive">
                                                    <table class="table table-bordered table-striped compact table-sm table-responsive-sm nowrap text-nowrap font-weight-light w-100" id="ShiftPaymentTable">
                                                        <thead>
                                                            <tr>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th hidden></th>
                                                                <th>CUSTOMER</th>
                                                                <th hidden></th>
                                                                <th>CASHIER/ATTENDANT</th>
                                                                <th hidden></th>
                                                                <th>MODE</th>
                                                                <th>AMOUNT</th>
                                                                <th>REFERENCE</th>
                                                                <th class="text-right">ACTION</th>
                                                            </tr>
                                                        </thead>

                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-6">
                            <table class="table table-bordered table-striped nowrap text-nowrap">
                                <thead>
                                    <tr>
                                        <th colspan="2">SHIFT FINANCIAL SUMMARY</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.FinancialDetails != null)
                                    {
                                        foreach (var productGroup in Model.FinancialDetails.GroupBy(x => x.Categoryname))
                                        {
                                            <tr>
                                                <td class="font-weight-bold" colspan="2">@productGroup.Key</td>
                                            </tr>
                                            decimal groupTotal = 0;
                                            foreach (var item in productGroup)
                                            {
                                                <tr>
                                                    <td>@item.Descriptions</td>
                                                    <td class="text-right">@item.Amount.ToString("#,##0.00")</td>
                                                </tr>
                                                groupTotal += item.Amount;
                                            }
                                            <tr>
                                                <td class="font-weight-bold">@productGroup.Key Total</td>
                                                <td class="font-weight-bold text-right">@groupTotal.ToString("#,##0.00")</td>
                                            </tr>
                                        }
                                        <tr>
                                            <td class="font-weight-bold">Expected Cash</td>
                                            <td class="font-weight-bold text-right">@Model.ShiftTotalAmount.ToString("#,##0.00")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div class="col-sm-6">
                            <div class="row">
                                <div class="col-sm-12 table-responsive">
                                    <table class="table table-bordered table-striped nowrap text-nowrap">
                                        <thead>
                                            <tr>
                                                <th colspan="5">PUMP SALE SUMMARY</th>
                                            </tr>
                                            <tr>
                                                <th>PUMP</th>
                                                <th class="text-right">TOTAL AMOUNT</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model.ShiftPumpSaleSummary != null)
                                            {
                                                foreach (var data in Model.ShiftPumpSaleSummary)
                                                {
                                                    <tr>
                                                        <td>@data.PumpName</td>
                                                        <td class="text-right">@data.PumpLitres.ToString("#,##0.00")</td>
                                                        <td class="text-right">@data.TotalShillings.ToString("#,##0.00")</td>
                                                    </tr>
                                                }
                                                <tr>
                                                    <td class="font-weight-bold">Totals</td>
                                                    <td class="font-weight-bold"></td>
                                                    <td class="font-weight-bold text-right">@Model.ShiftPumpSaleSummary.Sum(x => x.TotalShillings).ToString("#,##0.00")</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                                <div class="col-sm-12">
                                    <table class="table table-bordered table-striped nowrap text-nowrap">
                                        <thead>
                                            <tr>
                                                <th colspan="4">TANK SALE SUMMARY</th>
                                            </tr>
                                            <tr>
                                                <th>TANK</th>
                                                <th class="text-right">DIPS SOLD</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model.ShiftTankSaleSummary != null)
                                            {
                                                foreach (var data in Model.ShiftTankSaleSummary)
                                                {
                                                    <tr>
                                                        <td>@data.TankName</td>
                                                        <td class="text-right">@data.QuantitySold.ToString("#,##0.00")</td>
                                                        <td class="text-right">@data.AmountSold.ToString("#,##0.00")</td>
                                                    </tr>
                                                }
                                                <tr>
                                                    <td class="font-weight-bold">Totals</td>
                                                    <td class="font-weight-bold"></td>
                                                    <td class="font-weight-bold text-right">@Model.ShiftTankSaleSummary.Sum(x => x.AmountSold).ToString("#,##0.00")</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                                <div class="col-sm-12">
                                    <table class="table table-bordered table-striped nowrap text-nowrap">
                                        <thead>
                                            <tr>
                                                <th colspan="2">SHIFT ATTENDANT FINANCIAL SUMMARY</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model.AttendantShiftSummary != null)
                                            {
                                                decimal totalAmount = 0;
                                                foreach (var attendantGroup in Model.AttendantShiftSummary)
                                                {
                                                    <tr>
                                                        <td>@attendantGroup.Attendantname</td>
                                                        <td class="text-right">@attendantGroup.Amount.ToString("#,##0.00")</td>
                                                    </tr>
                                                    totalAmount += attendantGroup.Amount;
                                                }
                                                <tr>
                                                    <td class="font-weight-bold">Expected Cash</td>
                                                    <td class="font-weight-bold text-right">@totalAmount.ToString("#,##0.00")</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>

                    @if (Model.ShiftId >= 0)
                    {
                        <card>
                            <div class="row">
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label class="font-weight-light">Banked Amount</label>
                                        <input type="number" class="form-control form-control-sm font-weight-light" id="StationshiftbankedcashId" asp-for="@Model.ShiftBankedAmount" />
                                    </div>
                                </div>
                                <div class="col-sm-3">
                                    <div class="form-group">
                                        <label class="font-weight-light">Shift Balance</label>
                                        <input type="number" class="form-control form-control-sm font-weight-light" id="StationshiftunbankedcashId" asp-for="@Model.ShiftBalance" readonly />
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label class="font-weight-light">Banked Refence</label>
                                        <input class="form-control form-control-sm font-weight-light" id="SystemStationShiftBankingReferenceId" asp-for="@Model.ShiftBankReference" />
                                    </div>
                                </div>
                            </div>
                        </card>
                    }

                    <div class="row" hidden>
                        <div class="col-sm-12">
                            <input class="form-control form-control-sm font-weight-bold text-right" id="StationshiftexpectedcashId" asp-for="@Model.ShiftTotalAmount" />
                        </div>
                    </div>
                    <div class="row">
                        @if(Model.ShiftStatus == 0){
                            <div class="col-sm-3 offset-6" id="CAN_SUBMIT_SHIFT_DATA">
                                <button class="btn btn-sm btn-info font-weight-bold btn-block float-right" type="button" id="saveSystemStationShiftBtn" onclick="savesystemstationshiftdetaildata();">
                                    <span id="buttonText">SUBMIT SHIFT DETAIL DATA</span><span id="processingSpinner" class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true" style="display: none;"></span>
                                </button>
                            </div>
                            <div class="col-sm-3" id="CAN_MANAGER_CLOSE_SHIFT">
                                <button class="btn btn-sm btn-danger font-weight-bold btn-block float-right" type="button" id="closeSystemStationShiftBtn" onclick="closesystemstationshiftdetaildata();">
                                    <span id="closebuttonText">CLOSE SHIFT DETAIL DATA</span><span id="closeProcessingSpinner" class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true" style="display: none;"></span>
                                </button>
                            </div>
                            <div class="col-sm-3" id="CAN_SUPERVISOR_CLOSE_SHIFT">
                                <button class="btn btn-sm btn-danger font-weight-bold btn-block float-right" type="button" id="closeSystemStationShiftBtn" onclick="supervisorclosesystemstationshiftdata();">
                                    <span id="closebuttonText">CLOSE SHIFT DETAIL DATA</span><span id="closeProcessingSpinner" class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true" style="display: none;"></span>
                                </button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="container">
        <div class="row justify-content-center align-items-center vh-100">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body text-center" style="font-weight: 700; color: #FFA500;">
                        <p class="text-uppercase">There is an open Shift which needs to be closed!</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="~/js/shiftdatatables.js"></script>
    <script type="text/javascript">
        //function Savingshiftmaindetaildata() {
        //     if ($('#ShiftcategoryId').val() == '') {
        //         Swal.fire("Shift Not Created", 'Shift Type is Required', "warning");
        //         return;
        //     }
        //     var uil = {
        //         ShiftId: $("#SystemstationShiftId").val(), StationId: $("#SystemstationId").val(), ShiftCode: $("#SystemstationshiftcodeId").val(), ShiftCategory: $("#ShiftcategoryId").val(), CashOrAccount: $("#StationcashoraccountId").val(),
        //         ShiftDateTime: $("#SystemstationshiftdatetimeId").val(), ShiftStatus: $("#SystemStationShiftId").val(), IsPosted: $("#SystemStationShiftispostedId").val(), IsDeleted: $("#SystemStationShiftIsDeletedId").val(),
        //         ShiftTotalAmount: $("#StationshiftexpectedcashId").val(), ShiftBankedAmount: $("#StationshiftbankedcashId").val(), ShiftBalance: $("#StationshiftunbankedcashId").val(), ExpectedTankAmount: $("#StationshiftexpectedtankcashId").val(),
        //         ExpectedPumpAmount: $("#StationshiftexpectedpumpcashId").val(), GainLoss: $("#StationshiftgainlosscashId").val(), PercentGainLoss: $("#StationshiftpercentagegainlosscashId").val(), ShiftBankReference: $("#SystemStationShiftBankingReferenceId").val(), ShiftReference: $("#SystemStationShiftReferenceId").val(),
        //         Createdby: $('#systemLoggedinedUserid').val(), Modifiedby: $('#systemLoggedinedUserid').val(), DateCreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), DateModified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' ')
        //     };

        //     $.post("/StationManagement/Addsystemstationshiftdata", uil, function (response) {
        //         if (response.RespStatus == 0) {
        //             $("#SystemstationShiftId").val(response.Data1);
        //             Swal.fire('Saved!', sparepartResponse.RespMessage, 'success');
        //             window.location.href = "/StationManagement/Addsystemstationshift?ShiftId=" + $("#SystemstationShiftId").val();
        //         } else if (response.RespStatus == 1) {
        //             Swal.fire("Station details Not saved", response.RespMessage, "warning");
        //         }
        //         else {
        //             Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
        //         }
        //     });
        // }
        $(document).ready(function () {
            // if ($('#ShiftcategoryId').val() == '') {
            //     Swal.fire("Shift Not Created", 'Shift Type is Required', "warning");
            //     return;
            // }
            var ShiftPumpReadingsData = [];
            var ShiftTankReadingsData = [];
            var ShiftLubeReadingsData = [];
            var ShiftLpgsReadingsData = [];
            var ShiftSparePartsData = [];

            var isPumpValid = true; // Initialize isValid outside the loop
            var isTankValid = true; // Initialize isValid outside the loop
            var isLubeValid = true; // Initialize isValid outside the loop
            var isLpgValid = true; // Initialize isValid outside the loop
            var isSpareValid = true; // Initialize isValid outside the loop


            var uil1 = { ShiftId: $("#SystemstationShiftId").val(), ShiftPumpReading: ShiftPumpReadingsData };
            var uil2 = { ShiftId: $("#SystemstationShiftId").val(), ShiftTankReading: ShiftTankReadingsData };
            var uil3 = { ShiftId: $("#SystemstationShiftId").val(), ShiftLubeReading: ShiftLubeReadingsData };
            var uil4 = { ShiftId: $("#SystemstationShiftId").val(), ShiftLpgReading: ShiftLpgsReadingsData };
            var uil5 = { ShiftId: $("#SystemstationShiftId").val(), ShiftSparePartsData: ShiftSparePartsData };
            var uil6 = { ShiftId: $("#SystemstationShiftId").val(), ShiftSparePartsData: ShiftSparePartsData };

            document.addEventListener('DOMContentLoaded', function () {
                let currentTab = 'tab1-tab'; // Default active tab
                if (currentTab != 'tab1-tab' && StationShiftId != 0) {
                    $('#AllsystemDataTables').DataTable().$('tr', { "filter": "applied" }).each(function () {
                        var row = $(this);

                        // Retrieve values from input fields within the row
                        var StationShiftId = $("#SystemstationShiftId").val();
                        var pumpCashierAttendant = row.find('.pump-cashier-attendant').val();
                        var pumpOpeningShilling = row.find('.pump-opening-shilling').val();
                        var pumpOpeningElectronic = row.find('.pump-opening-electronic').val();
                        var pumpOpeningManual = row.find('.pump-opening-manual').val();
                        var pumpClosingShilling = row.find('.pump-closing-shilling').val();
                        var pumpClosingElectronic = row.find('.pump-closing-electronic').val();
                        var pumpClosingManual = row.find('.pump-closing-manual').val();
                        var TestingRtt = row.find('.pump-testing-rtt').val();
                        var ElectronicSold = row.find('.pump-electronic-sold').val();
                        var TotalShilling = row.find('.pump-total-shilling').val();
                        var ElectronicAmount = row.find('.pump-electronic-amount').val();
                        var ShillingDifference = row.find('.pump-shilling-difference').val();
                        var LitersDifference = row.find('.pump-liters-difference').val();
                        var ShiftReference = row.find('.pump-shift-reference').val();
                        var ManualSold = row.find('.pump-manual-manualsold').val();
                        var ManualAmount = row.find('.pump-manual-amount').val();
                        var PumpRttAmount = row.find('.pump-rtt-amount').val();
                        var TotalPumpAmount = row.find('.pump-total-amount').val();

                        // Remove any previous validation classes
                        row.find('.is-invalid').removeClass('is-invalid');
                        row.find('.is-valid').removeClass('is-valid');

                        var rowIsValid = true; // Initialize rowIsValid for each row

                        // Perform validation checks
                        if (StationShiftId == 0) {
                            if (pumpCashierAttendant == "" || pumpCashierAttendant == 0) {
                                row.find('.pump-cashier-attendant').addClass('is-invalid');
                                rowIsValid = false;
                            } else {
                                row.find('.pump-cashier-attendant').addClass('is-valid');
                            }

                            if (pumpOpeningShilling == "" || pumpOpeningShilling == 0) {
                                row.find('.pump-opening-shilling').addClass('is-invalid');
                                rowIsValid = false;
                            } else {
                                row.find('.pump-opening-shilling').addClass('is-valid');
                            }

                            if (pumpOpeningElectronic == "" || pumpOpeningElectronic == 0) {
                                row.find('.pump-opening-electronic').addClass('is-invalid');
                                rowIsValid = false;
                            } else {
                                row.find('.pump-opening-electronic').addClass('is-valid');
                            }

                            if (pumpOpeningManual == "" || pumpOpeningManual == 0) {
                                row.find('.pump-opening-manual').addClass('is-invalid');
                                rowIsValid = false;
                            } else {
                                row.find('.pump-opening-manual').addClass('is-valid');
                            }
                        } else {
                            if (pumpClosingShilling == "" || pumpClosingShilling == 0 || parseFloat(pumpClosingShilling) < parseFloat(pumpOpeningShilling)) {
                                row.find('.pump-closing-shilling').addClass('is-invalid');
                                rowIsValid = false;
                            } else {
                                row.find('.pump-closing-shilling').addClass('is-valid');
                            }

                            if (pumpClosingElectronic == "" || pumpClosingElectronic == 0 || parseFloat(pumpClosingElectronic) < parseFloat(pumpOpeningElectronic)) {
                                row.find('.pump-closing-electronic').addClass('is-invalid');
                                rowIsValid = false;
                            } else {
                                row.find('.pump-closing-electronic').addClass('is-valid');
                            }

                            if (pumpClosingManual == "" || pumpClosingManual == 0 || parseFloat(pumpClosingManual) < parseFloat(pumpOpeningManual)) {
                                row.find('.pump-closing-manual').addClass('is-invalid');
                                rowIsValid = false;
                            } else {
                                row.find('.pump-closing-manual').addClass('is-valid');
                            }
                        }

                        if (!rowIsValid) {
                            isPumpValid = false; // If any row is invalid, set isPumpValid to false
                        } else {
                            // Only push data if the row is valid
                            var ShiftPumpReadingData = {
                                ShiftPumpReadingId: row.find('td:eq(0)').text(),
                                ShiftId: row.find('td:eq(1)').text(),
                                NozzleId: row.find('td:eq(2)').text(),
                                PumpId: row.find('td:eq(3)').text(),
                                AttendantId: pumpCashierAttendant,
                                ProductPrice: row.find('.pump-product-price').val().replace(/,/g, ''),
                                OpeningShilling: pumpOpeningShilling.replace(/,/g, ''),
                                OpeningElectronic: pumpOpeningElectronic.replace(/,/g, ''),
                                OpeningManual: pumpOpeningManual.replace(/,/g, ''),
                                ClosingShilling: pumpClosingShilling.replace(/,/g, ''),
                                ClosingElectronic: pumpClosingElectronic.replace(/,/g, ''),
                                ClosingManual: pumpClosingManual.replace(/,/g, ''),
                                TestingRtt: TestingRtt.replace(/,/g, ''),
                                ElectronicSold: ElectronicSold.replace(/,/g, ''),
                                TotalShilling: TotalShilling.replace(/,/g, ''),
                                ElectronicAmount: ElectronicAmount.replace(/,/g, ''),
                                ShillingDifference: ShillingDifference.replace(/,/g, ''),
                                LitersDifference: LitersDifference.replace(/,/g, ''),
                                ShiftReference: ShiftReference,
                                ManualSold: ManualSold.replace(/,/g, ''),
                                ManualAmount: ManualAmount.replace(/,/g, ''),
                                PumpRttAmount: PumpRttAmount.replace(/,/g, ''),
                                TotalPumpAmount: TotalPumpAmount.replace(/,/g, ''),
                                Createdby: $('#systemLoggedinedUserid').val(),
                                Modifiedby: $('#systemLoggedinedUserid').val(),
                                DateCreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                                DateModified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' ')
                            };
                            ShiftPumpReadingsData.push(ShiftPumpReadingData);
                        }
                    });
                    // Check isPumpValid flag
                    if (!isPumpValid) {
                        Swal.fire("Shift Not Created", 'Pump reading is required', "warning");
                        return;
                    }
                    $.post("/StationManagement/Addsystemstationshiftpumpdata", uil1, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Saved!', response.RespMessage, 'success');
                            window.location.href = "/StationManagement/Addsystemstationshift?ShiftId=" + $("#SystemstationShiftId").val();
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Station details Not saved", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }
                    });
                }
                document.querySelectorAll('.nav-link').forEach(function (tab) {
                    tab.addEventListener('click', function () {
                        currentTab = this.id;
                        if (currentTab != 'tab2-tab' && StationShiftId != 0) {
                            $("#AllsystemDataTables1").DataTable().$('tr', { "filter": "applied" }).each(function () {
                                var row = $(this);
                                var StationShiftId = $("#SystemstationShiftId").val();
                                var tankCashierAttendant = row.find('.tank-cashier-attendant').val();
                                var tankOpeningQuantity = row.find('.tank-opening-quantity').val();
                                var tankClosingQuantity = row.find('.tank-closing-quantity').val();

                                // Remove any previous validation classes
                                row.find('.is-invalid').removeClass('is-invalid');
                                row.find('.is-valid').removeClass('is-valid');

                                var rowIsValid = true;
                                if (StationShiftId == 0) {
                                    if (tankCashierAttendant == "" || tankCashierAttendant == 0) {
                                        row.find('.tank-cashier-attendant').addClass('is-invalid');
                                        rowIsValid = false;
                                    } else {
                                        row.find('.tank-cashier-attendant').addClass('is-valid');
                                    }

                                    if (tankOpeningQuantity == "" || tankOpeningQuantity == 0) {
                                        row.find('.tank-opening-quantity').addClass('is-invalid');
                                        rowIsValid = false;
                                    } else {
                                        row.find('.tank-opening-quantity').addClass('is-valid');
                                    }
                                } else {
                                    if (tankClosingQuantity == "" || tankClosingQuantity == 0) {
                                        row.find('.tank-closing-quantity').addClass('is-invalid');
                                        rowIsValid = false;
                                    } else {
                                        row.find('.tank-closing-quantity').addClass('is-valid');
                                    }
                                }
                                if (!rowIsValid) {
                                    isTankValid = false; // If any row is invalid, set isValid to false
                                }
                                if (isTankValid) {
                                    var ShiftTankReadingData = {
                                        ShiftTankReadingId: row.find('td:eq(0)').text(),
                                        ShiftId: row.find('td:eq(1)').text(),
                                        TankId: row.find('td:eq(2)').text(),
                                        AttendantId: row.find('.tank-cashier-attendant').val(),
                                        ProductPrice: row.find('.tank-product-price').val().replace(/,/g, ''),
                                        OpeningQuantity: row.find('.tank-opening-quantity').val().replace(/,/g, ''),
                                        ClosingQuantity: row.find('.tank-closing-quantity').val().replace(/,/g, ''),
                                        QuantitySold: row.find('.tank-quantity-sold').val().replace(/,/g, ''),
                                        AmountSold: row.find('.tank-amount-sold').val().replace(/,/g, ''),
                                        Createdby: $('#systemLoggedinedUserid').val(), Modifiedby: $('#systemLoggedinedUserid').val(),
                                        DateCreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                                        DateModified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                                    };
                                    ShiftTankReadingsData.push(ShiftTankReadingData);
                                }
                            });
                            // Check isTankValid flag
                            if (!isTankValid) {
                                Swal.fire("Shift Not Created", 'Tank reading is required', "warning");
                                return;
                            }
                            $.post("/StationManagement/Addsystemstationshifttankdata", uil2, function (response) {
                                if (response.RespStatus == 0) {
                                    Swal.fire('Saved!', response.RespMessage, 'success');
                                    window.location.href = "/StationManagement/Addsystemstationshift?ShiftId=" + $("#SystemstationShiftId").val();
                                } else if (response.RespStatus == 1) {
                                    Swal.fire("Station details Not saved", response.RespMessage, "warning");
                                }
                                else {
                                    Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                                }
                            });
                        }
                        if (currentTab != 'tab3-tab' && StationShiftId != 0) {
                            $("#AllsystemDataTables2").DataTable().$('tr', { "filter": "applied" }).each(function () {
                                var row = $(this);
                                var StationShiftId = $("#SystemstationShiftId").val();
                                var lubesCashierAttendant = row.find('.lubes-cashier-attendant').val();
                                var lubesOpeningUnits = row.find('.lubes-opening-units').val();
                                var lubesClosingUnits = row.find('.lubes-closing-units').val();

                                // Remove any previous validation classes
                                row.find('.is-invalid').removeClass('is-invalid');
                                row.find('.is-valid').removeClass('is-valid');

                                var rowIsValid = true;
                                if ($("#AllsystemDataTables2 tbody tr").length > 0) {
                                    $("#AllsystemDataTables2 tbody tr").each(function () {
                                        if (StationShiftId == 0) {
                                            if (lubesCashierAttendant == "" || lubesCashierAttendant == 0) {
                                                row.find('.lubes-cashier-attendant').addClass('is-invalid');
                                                rowIsValid = false;
                                            } else {
                                                row.find('.lubes-cashier-attendant').addClass('is-valid');
                                            }

                                            if (lubesOpeningUnits == "") {
                                                row.find('.lubes-opening-units').addClass('is-invalid');
                                                rowIsValid = false;
                                            } else {
                                                row.find('.lubes-opening-units').addClass('is-valid');
                                            }
                                        } else {

                                            if (lubesClosingUnits == "") {
                                                row.find('.lubes-closing-units').addClass('is-invalid');
                                                rowIsValid = false;
                                            } else {
                                                row.find('.lubes-closing-units').addClass('is-valid');
                                            }
                                        }

                                    });
                                }
                                if (!rowIsValid) {
                                    isLubeValid = false; // If any row is invalid, set isValid to false
                                }

                                if (isLubeValid) {
                                    var ShiftLubeReadingData = {
                                        ShiftLubeLpgId: row.find('td:eq(0)').text(),
                                        ShiftId: row.find('td:eq(1)').text(),
                                        ProductVariationId: row.find('td:eq(2)').text(),
                                        StockTypeId: 0,
                                        AttendantId: row.find('.lubes-cashier-attendant').val(),
                                        OpeningUnits: row.find('.lubes-opening-units').val().replace(/,/g, ''),
                                        ClosingUnits: row.find('.lubes-closing-units').val().replace(/,/g, ''),
                                        UnitsSold: row.find('.lubes-units-sold').val().replace(/,/g, ''),
                                        ProductPrice: row.find('.lubes-unit-price').val().replace(/,/g, ''),
                                        UnitsTotal: row.find('.lubes-amount-sold').val().replace(/,/g, ''),
                                        Createdby: $('#systemLoggedinedUserid').val(), Modifiedby: $('#systemLoggedinedUserid').val(),
                                        DateCreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                                        DateModified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                                    };
                                    ShiftLubeReadingsData.push(ShiftLubeReadingData);
                                }
                            });
                            // Check isLubeValid flag
                            if (!isLubeValid) {
                                Swal.fire("Shift Not Created", 'Lubelicants reading is required', "warning");
                                document.getElementById("saveSystemStationShiftBtn").disabled = false;
                                document.getElementById("processingSpinner").style.display = "none";
                                document.getElementById("buttonText").innerText = "SUBMIT SHIFT DETAIL DATA";
                                return;
                            }

                            $.post("/StationManagement/Addsystemstationshiftlubedata", uil3, function (response) {
                                if (response.RespStatus == 0) {
                                    Swal.fire('Saved!', response.RespMessage, 'success');
                                    window.location.href = "/StationManagement/Addsystemstationshift?ShiftId=" + $("#SystemstationShiftId").val();
                                } else if (response.RespStatus == 1) {
                                    Swal.fire("Station details Not saved", response.RespMessage, "warning");
                                }
                                else {
                                    Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                                }
                            });
                        }
                        if (currentTab != 'tab4-tab' && StationShiftId != 0) {
                            $("#AllsystemDataTables3").DataTable().$('tr', { "filter": "applied" }).each(function () {
                                var row = $(this);
                                var StationShiftId = $("#SystemstationShiftId").val();
                                var lpgCashierAttendant = row.find('.lpg-cashier-attendant').val();
                                var lpgOpeningUnits = row.find('.lpg-opening-units').val();
                                var lpgClosingUnits = row.find('.lpg-closing-units').val();

                                // Remove any previous validation classes
                                row.find('.is-invalid').removeClass('is-invalid');
                                row.find('.is-valid').removeClass('is-valid');

                                var rowIsValid = true;
                                if ($("#AllsystemDataTables3 tbody tr").length > 0) {
                                    if (StationShiftId == 0) {
                                        if (lpgCashierAttendant == "" || lpgCashierAttendant == 0) {
                                            row.find('.lpg-cashier-attendant').addClass('is-invalid');
                                            rowIsValid = false;
                                        } else {
                                            row.find('.lpg-cashier-attendant').addClass('is-valid');
                                        }

                                        if (lpgOpeningUnits == "") {
                                            row.find('.lpg-opening-units').addClass('is-invalid');
                                            rowIsValid = false;
                                        } else {
                                            row.find('.lpg-opening-units').addClass('is-valid');
                                        }
                                    } else {
                                        if (lpgClosingUnits == "") {
                                            row.find('.lpg-closing-units').addClass('is-invalid');
                                            rowIsValid = false;
                                        } else {
                                            row.find('.lpg-closing-units').addClass('is-valid');
                                        }
                                    }
                                }
                                if (!rowIsValid) {
                                    isLpgValid = false; // If any row is invalid, set isValid to false
                                }

                                if (isLpgValid) {
                                    var ShiftLpgReadingsData = {
                                        ShiftLubeLpgId: row.find('td:eq(0)').text(),
                                        ShiftId: row.find('td:eq(1)').text(),
                                        ProductVariationId: row.find('td:eq(2)').text(),
                                        StockTypeId: 0,
                                        AttendantId: row.find('.lpg-cashier-attendant').val(),
                                        OpeningUnits: row.find('.lpg-opening-units').val().replace(/,/g, ''),
                                        ClosingUnits: row.find('.lpg-closing-units').val().replace(/,/g, ''),
                                        UnitsSold: row.find('.lpg-units-sold').val().replace(/,/g, ''),
                                        ProductPrice: row.find('.lpg-unit-price').val().replace(/,/g, ''),
                                        UnitsTotal: row.find('.lpg-amount-sold').val().replace(/,/g, ''),
                                        Createdby: $('#systemLoggedinedUserid').val(), Modifiedby: $('#systemLoggedinedUserid').val(),
                                        DateCreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                                        DateModified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                                    };
                                    ShiftLpgsReadingsData.push(ShiftLpgReadingsData);
                                }
                            });
                            // Check isLpgValid flag
                            if (!isLpgValid) {
                                Swal.fire("Shift Not Created", 'Lpg and accessories reading is required', "warning");
                                document.getElementById("saveSystemStationShiftBtn").disabled = false;
                                document.getElementById("processingSpinner").style.display = "none";
                                document.getElementById("buttonText").innerText = "SUBMIT SHIFT DETAIL DATA";
                                return;
                            }
                            $.post("/StationManagement/Addsystemstationshiftlpgdata", uil4, function (response) {
                                if (response.RespStatus == 0) {
                                    Swal.fire('Saved!', response.RespMessage, 'success');
                                    window.location.href = "/StationManagement/Addsystemstationshift?ShiftId=" + $("#SystemstationShiftId").val();
                                } else if (response.RespStatus == 1) {
                                    Swal.fire("Station details Not saved", response.RespMessage, "warning");
                                }
                                else {
                                    Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                                }
                            });
                        }
                        if (currentTab != 'tab5-tab' && StationShiftId != 0) {
                            $("#AllsystemDataTables4").DataTable().$('tr', { "filter": "applied" }).each(function () {
                                var row = $(this);
                                var StationShiftId = $("#SystemstationShiftId").val();
                                var sparePartsCashierAttendant = row.find('.spare-cashier-attendant').val();
                                var sparePartsOpeningUnits = row.find('.spare-opening-units').val();
                                var sparePartsClosingUnits = row.find('.spare-closing-units').val();

                                // Remove any previous validation classes
                                row.find('.is-invalid').removeClass('is-invalid');
                                row.find('.is-valid').removeClass('is-valid');

                                var rowIsValid = true;
                                if ($("#AllsystemDataTables4 tbody tr").length > 0) {
                                    if (StationShiftId == 0) {
                                        if (sparePartsCashierAttendant == "" || sparePartsCashierAttendant == 0) {
                                            row.find('.spare-cashier-attendant').addClass('is-invalid');
                                            rowIsValid = false;
                                        } else {
                                            row.find('.spare-cashier-attendant').addClass('is-valid');
                                        }

                                        if (sparePartsOpeningUnits == "") {
                                            row.find('.spare-opening-units').addClass('is-invalid');
                                            rowIsValid = false;
                                        } else {
                                            row.find('.spare-opening-units').addClass('is-valid');
                                        }
                                    } else {
                                        if (sparePartsClosingUnits == "") {
                                            row.find('.spare-closing-units').addClass('is-invalid');
                                            rowIsValid = false;
                                        } else {
                                            row.find('.spare-closing-units').addClass('is-valid');
                                        }
                                    }
                                }

                                if (!rowIsValid) {
                                    isSpareValid = false; // If any row is invalid, set isValid to false
                                }
                                if (isSpareValid) {
                                    var ShiftSparePartData = {
                                        ShiftLubeLpgId: row.find('td:eq(0)').text(),
                                        ShiftId: row.find('td:eq(1)').text(),
                                        ProductVariationId: row.find('td:eq(2)').text(),
                                        StockTypeId: 0,
                                        AttendantId: row.find('.spare-cashier-attendant').val(),
                                        OpeningUnits: row.find('.spare-opening-units').val().replace(/,/g, ''),
                                        ClosingUnits: row.find('.spare-closing-units').val().replace(/,/g, ''),
                                        UnitsSold: row.find('.spare-units-sold').val().replace(/,/g, ''),
                                        ProductPrice: row.find('.spare-unit-price').val().replace(/,/g, ''),
                                        UnitsTotal: row.find('.spare-amount-sold').val().replace(/,/g, ''),
                                        Createdby: $('#systemLoggedinedUserid').val(), Modifiedby: $('#systemLoggedinedUserid').val(),
                                        DateCreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                                        DateModified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                                    };
                                    ShiftSparePartsData.push(ShiftSparePartData);
                                }
                            });
                            // Check isSpareValid flag
                            if (!isSpareValid) {
                                Swal.fire("Shift Not Created", 'Spareparts reading is required', "warning");
                                return;
                            }
                            $.post("/StationManagement/Addsystemstationshiftsparepartdata", uil5, function (response) {
                                if (response.RespStatus == 0) {
                                    Swal.fire('Saved!', response.RespMessage, 'success');
                                    window.location.href = "/StationManagement/Addsystemstationshift?ShiftId=" + $("#SystemstationShiftId").val();
                                } else if (response.RespStatus == 1) {
                                    Swal.fire("Station details Not saved", response.RespMessage, "warning");
                                }
                                else {
                                    Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                                }
                            });
                        }
                            if (currentTab != 'tab6-tab' && StationShiftId != 0) {
                            $("#AllsystemDataTables5").DataTable().$('tr', { "filter": "applied" }).each(function () {
                                var row = $(this);
                                var StationShiftId = $("#SystemstationShiftId").val();
                                var sparePartsCashierAttendant = row.find('.spare-cashier-attendant').val();
                                var sparePartsOpeningUnits = row.find('.spare-opening-units').val();
                                var sparePartsClosingUnits = row.find('.spare-closing-units').val();

                                // Remove any previous validation classes
                                row.find('.is-invalid').removeClass('is-invalid');
                                row.find('.is-valid').removeClass('is-valid');

                                var rowIsValid = true;
                                if ($("#AllsystemDataTables5 tbody tr").length > 0) {
                                    if (StationShiftId == 0) {
                                        if (sparePartsCashierAttendant == "" || sparePartsCashierAttendant == 0) {
                                            row.find('.spare-cashier-attendant').addClass('is-invalid');
                                            rowIsValid = false;
                                        } else {
                                            row.find('.spare-cashier-attendant').addClass('is-valid');
                                        }

                                        if (sparePartsOpeningUnits == "") {
                                            row.find('.spare-opening-units').addClass('is-invalid');
                                            rowIsValid = false;
                                        } else {
                                            row.find('.spare-opening-units').addClass('is-valid');
                                        }
                                    } else {
                                        if (sparePartsClosingUnits == "") {
                                            row.find('.spare-closing-units').addClass('is-invalid');
                                            rowIsValid = false;
                                        } else {
                                            row.find('.spare-closing-units').addClass('is-valid');
                                        }
                                    }
                                }

                                if (!rowIsValid) {
                                    isSpareValid = false; // If any row is invalid, set isValid to false
                                }
                                if (isSpareValid) {
                                    var ShiftSparePartData = {
                                        ShiftLubeLpgId: row.find('td:eq(0)').text(),
                                        ShiftId: row.find('td:eq(1)').text(),
                                        ProductVariationId: row.find('td:eq(2)').text(),
                                        StockTypeId: 0,
                                        AttendantId: row.find('.spare-cashier-attendant').val(),
                                        OpeningUnits: row.find('.spare-opening-units').val().replace(/,/g, ''),
                                        ClosingUnits: row.find('.spare-closing-units').val().replace(/,/g, ''),
                                        UnitsSold: row.find('.spare-units-sold').val().replace(/,/g, ''),
                                        ProductPrice: row.find('.spare-unit-price').val().replace(/,/g, ''),
                                        UnitsTotal: row.find('.spare-amount-sold').val().replace(/,/g, ''),
                                        Createdby: $('#systemLoggedinedUserid').val(), Modifiedby: $('#systemLoggedinedUserid').val(),
                                        DateCreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                                        DateModified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                                    };
                                    ShiftSparePartsData.push(ShiftSparePartData);
                                }
                            });

                            $.post("/StationManagement/Addsystemstationshiftcarwashdata", uil6, function (response) {
                                if (response.RespStatus == 0) {
                                    Swal.fire('Saved!', response.RespMessage, 'success');
                                    window.location.href = "/StationManagement/Addsystemstationshift?ShiftId=" + $("#SystemstationShiftId").val();
                                } else if (response.RespStatus == 1) {
                                    Swal.fire("Station details Not saved", response.RespMessage, "warning");
                                }
                                else {
                                    Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                                }
                            });
                        }
                    });
                });
            });

            // Check if the table body contains any rows
            var tableBody = $('#AllsystemDataTables tbody');
            var noDataRows = tableBody.find('tr');
            if (noDataRows.length === 1 && noDataRows.hasClass('odd')) {
                // Remove the "No data available in table" row
                tableBody.empty();
            }
            var tableBody1 = $('#AllsystemDataTables1 tbody');
            var noDataRows = tableBody1.find('tr');
            if (noDataRows.length === 1 && noDataRows.hasClass('odd')) {
                // Remove the "No data available in table" row
                tableBody1.empty();
            }

            // var tableBody2 = $('#AllsystemDataTables2 tbody');
            // tableBody2.empty();

            var tableBody3 = $('#AllsystemDataTables3 tbody');
            var noDataRows = tableBody3.find('tr');
            if (noDataRows.length === 1 && noDataRows.hasClass('odd')) {
                // Remove the "No data available in table" row
                tableBody3.empty();
            }
            var tableBody4 = $('#AllsystemDataTables4 tbody');
            var noDataRows = tableBody4.find('tr');
            if (noDataRows.length === 1 && noDataRows.hasClass('odd')) {
                // Remove the "No data available in table" row
                tableBody4.empty();
            }
            var tableBody5 = $('#AllsystemDataTables5 tbody');
            var noDataRows = tableBody5.find('tr');
            if (noDataRows.length === 1 && noDataRows.hasClass('odd')) {
                // Remove the "No data available in table" row
                tableBody5.empty();
            }
            var tableBody6 = $('#AllsystemDataTables6 tbody');
            var noDataRows = tableBody6.find('tr');
            if (noDataRows.length === 1 && noDataRows.hasClass('odd')) {
                // Remove the "No data available in table" row
                tableBody6.empty();
            }
            var tableBody7 = $('#AllsystemDataTables7 tbody');
            var noDataRows = tableBody7.find('tr');
            if (noDataRows.length === 1 && noDataRows.hasClass('odd')) {
                // Remove the "No data available in table" row
                tableBody7.empty();
            }
            var tableBody8 = $('#AllsystemDataTables8 tbody');
            var noDataRows = tableBody8.find('tr');
            if (noDataRows.length === 1 && noDataRows.hasClass('odd')) {
                // Remove the "No data available in table" row
                tableBody8.empty();
            }
            var tableBody9 = $('#AllsystemDataTables9 tbody');
            var noDataRows = tableBody9.find('tr');
            if (noDataRows.length === 1 && noDataRows.hasClass('odd')) {
                // Remove the "No data available in table" row
                tableBody9.empty();
            }
            var tableBody10 = $('#AllsystemDataTables10 tbody');
            var noDataRows = tableBody10.find('tr');
            if (noDataRows.length === 1 && noDataRows.hasClass('odd')) {
                // Remove the "No data available in table" row
                tableBody10.empty();
            }
            var tableBody11 = $('#AllsystemDataTables11 tbody');
            var noDataRows = tableBody11.find('tr');
            if (noDataRows.length === 1 && noDataRows.hasClass('odd')) {
                // Remove the "No data available in table" row
                tableBody11.empty();
            }
            var tableBody12 = $('#AllsystemDataTables12 tbody');
            var noDataRows = tableBody12.find('tr');
            if (noDataRows.length === 1 && noDataRows.hasClass('odd')) {
                // Remove the "No data available in table" row
                tableBody12.empty();
            }
            var tableBody13 = $('#AllsystemDataTables13 tbody');
            var noDataRows = tableBody13.find('tr');
            if (noDataRows.length === 1 && noDataRows.hasClass('odd')) {
                // Remove the "No data available in table" row
                tableBody13.empty();
            }
            var tableBody14 = $('#AllsystemDataTables14 tbody');
            var noDataRows = tableBody14.find('tr');
            if (noDataRows.length === 1 && noDataRows.hasClass('odd')) {
                // Remove the "No data available in table" row
                tableBody14.empty();
            }
        });

        function Getdryproductdetail(productVariationId) {
            var customerId = $("#CreditInvoiceSearchCustomerId").val();
            $('#progressIndicator').show();
            if (productVariationId !== 0 || productVariationId !== "") {
                $.get("/StationManagement/GetsystemdryproductpricebyId?ProductId=" + productVariationId + "&CustomerId=" + customerId, null, function (data) {
                    $("#CreditInvoiceItemPriceId").val(data.ProductPrice);
                    $("#CreditInvoiceItemDiscountId").val(data.DiscountValue);
                    $("#CreditInvoiceVatvalueId").val(data.VatValue);
                    $("#DryProductPriceQuantity").show();
                    $('#progressIndicator').hide();
                });
            }
            $("#DryProductPriceQuantity").hide();
            $('#progressIndicator').hide();
        }

        function Getdrysupplierproductprice(productVariationId) {
            var supplierId = $("#SystemDrysupplierId").val();
            if ($("#SystemDrysupplierId").val() == "" || $("#SystemDrysupplierId").val() == 0) {
                Swal.fire("Price Not Fetched", 'Supplier must be selected', "warning");
                return;
            } else {
                $('#progressIndicator').show();
                $.get("/StationManagement/GetsystemproductpricevatbyId?SupplierId=" + supplierId + "&ProductVariationId=" + productVariationId, null, function (data) {
                    $("#SystemDryproductpriceId").val(data.ProductPrice);
                    $("#SystemDryproducttaxId").val(data.VatValue);
                });
            }
        }
        function Getwetsupplierproductprice(productVariationId) {
            var supplierId = $("#SystemWetsupplierId").val();
            if ($("#SystemWetsupplierId").val() == "" || $("#SystemWetsupplierId").val() == 0) {
                Swal.fire("Price Not Fetched", 'Supplier must be selected', "warning");
                return;
            } else {
                $('#progressIndicator').show();
                $.get("/StationManagement/GetsystemproductpricevatbyId?SupplierId=" + supplierId + "&ProductVariationId=" + productVariationId, null, function (data) {
                    $("#SystemWetproductpriceId").val(data.ProductPrice);
                    $("#SystemWetproducttaxId").val(data.VatValue);
                });
            }
        }

        function Getmpesaproductpricedata(productVariationId) {
            $('#progressIndicator').show();
            $.get("/StationManagement/GetsystemdryproductpricebyId?ProductId=" + productVariationId + "&CustomerId=" + 0, null, function (data) {
                $("#MpesaCollectionPriceId").val(data.ProductPrice);
                $("#MpesaCollectionDiscountId").val(data.DiscountValue);
                $("#MpesaCollectionVatId").val(data.VatValue);
            });
        }
        $('#MpesaCollectionAmountId').on('input', function () {
            var MpesaAmount = parseFloat(document.getElementById("MpesaCollectionAmountId").value);
            var MpesaPrice = parseFloat(document.getElementById("MpesaCollectionPriceId").value);
            var MpesaVat = parseFloat(document.getElementById("MpesaCollectionVatId").value);

            if (!isNaN(MpesaAmount) && !isNaN(MpesaPrice) && !isNaN(MpesaVat)) {
                var totalQuantity = MpesaAmount / MpesaPrice;
                var vatAmount = MpesaAmount * ((MpesaVat) / 100);
                document.getElementById("MpesaCollectionQuantityId").value = totalQuantity.toFixed(2);
                document.getElementById("MpesaCollectionVatAmountId").value = vatAmount.toFixed(2);
            }

        });
        function Getfuelcardproductpricedata(productVariationId) {
            $('#progressIndicator').show();
            $.get("/StationManagement/GetsystemdryproductpricebyId?ProductId=" + productVariationId + "&CustomerId=" + 0, null, function (data) {
                $("#FuelCardCollectionPriceId").val(data.ProductPrice);
                $("#FuelCardCollectionDiscountId").val(data.DiscountValue);
                $("#FuelCardCollectionVatId").val(data.VatValue);
            });
        }
        $('#FuelCardCollectionAmountId').on('input', function () {
            var FuelCardAmount = parseFloat(document.getElementById("FuelCardCollectionAmountId").value);
            var FuelCardPrice = parseFloat(document.getElementById("FuelCardCollectionPriceId").value);
            var FuelCardVat = parseFloat(document.getElementById("FuelCardCollectionVatId").value);

            if (!isNaN(FuelCardAmount) && !isNaN(FuelCardPrice) && !isNaN(FuelCardVat)) {
                var totalQuantity = FuelCardAmount / FuelCardPrice;
                var vatAmount = FuelCardAmount * ((FuelCardVat) / 100);
                document.getElementById("FuelCardCollectionQuantityId").value = totalQuantity.toFixed(2);
                document.getElementById("FuelCardCollectionVatAmountId").value = vatAmount.toFixed(2);
            }
        });


        function Getmerchantproductpricedata(productVariationId) {
            $('#progressIndicator').show();
            $.get("/StationManagement/GetsystemdryproductpricebyId?ProductId=" + productVariationId + "&CustomerId=" + 0, null, function (data) {
                $("#MerchantCollectionPriceId").val(data.ProductPrice);
                $("#MerchantCollectionDiscountId").val(data.DiscountValue);
                $("#MerchantCollectionVatId").val(data.VatValue);
            });
        }
        $('#MerchantCollectionAmountId').on('input', function () {
            var MerchantAmount = parseFloat(document.getElementById("MerchantCollectionAmountId").value);
            var MerchantPrice = parseFloat(document.getElementById("MerchantCollectionPriceId").value);
            var MerchantVat = parseFloat(document.getElementById("MerchantCollectionVatId").value);

            if (!isNaN(MerchantAmount) && !isNaN(MerchantPrice) && !isNaN(MerchantVat)) {
                var totalQuantity = MerchantAmount / MerchantPrice;
                var vatAmount = MerchantAmount * ((MerchantVat) / 100);
                document.getElementById("MerchantCollectionQuantityId").value = totalQuantity.toFixed(2);
                document.getElementById("MerchantCollectionVatAmountId").value = vatAmount.toFixed(2);
            }
        });


        $('#StationshiftbankedcashId').on('input', function () {
            var ShiftBankedCash = parseFloat(document.getElementById("StationshiftbankedcashId").value);
            var ShiftExpectedCash = parseFloat(document.getElementById("StationshiftexpectedcashId").value);

            if (!isNaN(ShiftBankedCash) && !isNaN(ShiftExpectedCash)) {
                var totalAmount = ShiftExpectedCash - ShiftBankedCash;
                document.getElementById("StationshiftunbankedcashId").value = totalAmount.toFixed(2);
            }
        });

        // Event listener for input changes
        document.addEventListener('input', function (event) {
            var target = event.target;
            var stationShiftId = document.getElementById("SystemstationShiftId").value;
            if (stationShiftId !== "0") {
                // Check if the changed input is in the detail table
                if (target.closest('#AllsystemDataTables')) {
                    var detailRows = document.querySelectorAll('#AllsystemDataTables tbody tr');
                    detailRows.forEach(function (row) {
                        var pumpProductPrice = parseFloat(row.querySelector('.pump-product-price').value) || 0;
                        var pumpOpeningShilling = parseFloat(row.querySelector('.pump-opening-shilling').value) || 0;
                        var pumpOpeningElectronic = parseFloat(row.querySelector('.pump-opening-electronic').value) || 0;
                        var pumpOpeningManual = parseFloat(row.querySelector('.pump-opening-manual').value) || 0;
                        var pumpClosingShilling = parseFloat(row.querySelector('.pump-closing-shilling').value) || 0;
                        var pumpClosingElectronic = parseFloat(row.querySelector('.pump-closing-electronic').value) || 0;
                        var pumpClosingManual = parseFloat(row.querySelector('.pump-closing-manual').value) || 0;
                        var pumpTestingLiters = parseFloat(row.querySelector('.pump-testing-rtt').value) || 0;

                        var rowIsValid = true;

                        // Ensure inputs exist before accessing their values
                        if (pumpClosingShilling && (parseFloat(pumpClosingShilling.value) === 0 || parseFloat(pumpClosingShilling.value) < parseFloat(pumpOpeningShilling.value))) {
                            row.querySelector('.pump-closing-shilling').classList.add('is-invalid');
                            rowIsValid = false;
                        }
                        if (pumpClosingElectronic && (parseFloat(pumpClosingElectronic.value) === 0 || parseFloat(pumpClosingElectronic.value) < parseFloat(pumpOpeningElectronic.value))) {
                            row.querySelector('.pump-closing-electronic').classList.add('is-invalid');
                            rowIsValid = false;
                        }
                        if (pumpClosingManual && (parseFloat(pumpClosingManual.value) === 0 || parseFloat(pumpClosingManual.value) < parseFloat(pumpOpeningManual.value))) {
                            row.querySelector('.pump-closing-manual').classList.add('is-invalid');
                            rowIsValid = false;
                        }

                        var electronicQuantitySold = pumpClosingElectronic - pumpOpeningElectronic;
                        electronicQuantitySold = Math.max(electronicQuantitySold, 0); // Ensure sale quantity is non-negative
                        row.querySelector('.pump-electronic-sold').value = electronicQuantitySold.toFixed(2);

                        var totalShillingSold = pumpClosingShilling - pumpOpeningShilling;
                        totalShillingSold = Math.max(totalShillingSold, 0); // Ensure sale quantity is non-negative
                        row.querySelector('.pump-total-shilling').value = totalShillingSold.toFixed(2);

                        var pumpAmountElectronic = electronicQuantitySold * pumpProductPrice;
                        pumpAmountElectronic = Math.max(pumpAmountElectronic, 0); // Ensure amount is non-negative
                        row.querySelector('.pump-electronic-amount').value = pumpAmountElectronic.toFixed(2);

                        var totalShillingDifference = totalShillingSold - pumpAmountElectronic;
                        totalShillingDifference = Math.max(totalShillingDifference, 0); // Ensure sale quantity is non-negative
                        row.querySelector('.pump-shilling-difference').value = totalShillingDifference.toFixed(2);

                        var manualQuantitySold = pumpClosingManual - pumpOpeningManual;
                        manualQuantitySold = Math.max(manualQuantitySold, 0); // Ensure sale quantity is non-negative
                        row.querySelector('.pump-manual-manualsold').value = manualQuantitySold.toFixed(2);

                        var pumpAmountManual = manualQuantitySold * pumpProductPrice;
                        pumpAmountManual = Math.max(pumpAmountManual, 0); // Ensure amount is non-negative
                        row.querySelector('.pump-manual-amount').value = pumpAmountManual.toFixed(2);

                        var quantityDifference = manualQuantitySold - electronicQuantitySold;
                        quantityDifference = Math.max(quantityDifference, 0); // Ensure sale quantity is non-negative
                        row.querySelector('.pump-liters-difference').value = quantityDifference.toFixed(2);

                        var pumpTestingAmount = pumpTestingLiters * pumpProductPrice;
                        pumpTestingAmount = Math.max(pumpTestingAmount, 0); // Ensure amount is non-negative
                        row.querySelector('.pump-rtt-amount').value = pumpTestingAmount.toFixed(2);

                        var pumpTotalAmount = pumpAmountElectronic - pumpTestingAmount;
                        pumpTotalAmount = Math.max(pumpTotalAmount, 0); // Ensure amount is non-negative
                        row.querySelector('.pump-total-amount').value = pumpTotalAmount.toFixed(2);
                    });
                } else if (target.closest('#AllsystemDataTables1')) {
                    var row = target.closest('tr'); // Get the closest row to the clicked element
                    var tankId = row.querySelector('td:nth-child(3)').innerText.trim(); // Get the tank ID from the third column of the row
                    var tankopeningRead = parseFloat(row.querySelector('.tank-opening-quantity').value) || 0;
                    var tankclosingRead = parseFloat(row.querySelector('.tank-closing-quantity').value) || 0;
                    var tankitemRate = parseFloat(row.querySelector('.tank-product-price').value) || 0;

                    Getshiftpurchasequantitydata(stationShiftId, tankId, function (purchaseQuantity) {
                        var tanksaleQuantity = tankopeningRead + purchaseQuantity - tankclosingRead;
                        tanksaleQuantity = Math.max(tanksaleQuantity, 0); // Ensure sale quantity is non-negative
                        row.querySelector('.tank-quantity-sold').value = tanksaleQuantity.toFixed(2);

                        var tankamount = tanksaleQuantity * tankitemRate;
                        tankamount = Math.max(tankamount, 0); // Ensure amount is non-negative
                        row.querySelector('.tank-amount-sold').value = tankamount.toFixed(2);
                    });
                } else if (target.closest('#AllsystemDataTables2')) {
                    var row = target.closest('tr'); // Get the closest row to the clicked element

                    var productId = row.querySelector('td:nth-child(3)').innerText.trim(); // Get the product ID from the third column of the row
                    var lubeopeningRead = parseFloat(row.querySelector('.lubes-opening-units').value) || 0;
                    var lubeclosingRead = parseFloat(row.querySelector('.lubes-closing-units').value) || 0;
                    var lubeitemRate = parseFloat(row.querySelector('.lubes-unit-price').value) || 0;

                    Getshiftdryproductpurchasequantitydata(stationShiftId, productId, function (purchaseQuantity) {
                        var lubesaleQuantity = lubeopeningRead + purchaseQuantity - lubeclosingRead;
                        lubesaleQuantity = Math.max(lubesaleQuantity, 0); // Ensure sale quantity is non-negative
                        row.querySelector('.lubes-units-sold').value = lubesaleQuantity.toFixed(2);

                        var lubeamount = lubesaleQuantity * lubeitemRate;
                        lubeamount = Math.max(lubeamount, 0); // Ensure amount is non-negative
                        row.querySelector('.lubes-amount-sold').value = lubeamount.toFixed(2);
                    });
                } else if (target.closest('#AllsystemDataTables3')) {
                    var row = target.closest('tr'); // Get the closest row to the clicked element
                    var productId = row.querySelector('td:nth-child(3)').innerText.trim();
                    var lpgopeningRead = parseFloat(row.querySelector('.lpg-opening-units').value) || 0;
                    var lpgclosingRead = parseFloat(row.querySelector('.lpg-closing-units').value) || 0;
                    var lpgitemRate = parseFloat(row.querySelector('.lpg-unit-price').value) || 0;

                    Getshiftdryproductpurchasequantitydata(stationShiftId, productId, function (purchaseQuantity) {
                        var lpgsaleQuantity = lpgopeningRead - lpgclosingRead + purchaseQuantity;
                        lpgsaleQuantity = Math.max(lpgsaleQuantity, 0); // Ensure sale quantity is non-negative
                        row.querySelector('.lpg-units-sold').value = lpgsaleQuantity.toFixed(2);

                        var lpgamount = lpgsaleQuantity * lpgitemRate;
                        lpgamount = Math.max(lpgamount, 0); // Ensure amount is non-negative
                        row.querySelector('.lpg-amount-sold').value = lpgamount.toFixed(2);
                    });
                } else if (target.closest('#AllsystemDataTables4')) {
                    var row = target.closest('tr'); // Get the closest row to the clicked element
                    var productId = row.querySelector('td:nth-child(3)').innerText.trim();
                    var spareopeningRead = parseFloat(row.querySelector('.spare-opening-units').value) || 0;
                    var spareclosingRead = parseFloat(row.querySelector('.spare-closing-units').value) || 0;
                    var spareitemRate = parseFloat(row.querySelector('.spare-unit-price').value) || 0;

                    Getshiftdryspareproductpurchasequantitydata(stationShiftId, productId, function (purchaseQuantity) {
                        var sparesaleQuantity = spareopeningRead - spareclosingRead + purchaseQuantity;
                        sparesaleQuantity = Math.max(sparesaleQuantity, 0); // Ensure sale quantity is non-negative
                        row.querySelector('.spare-units-sold').value = sparesaleQuantity.toFixed(2);

                        var spareamount = sparesaleQuantity * spareitemRate;
                        spareamount = Math.max(spareamount, 0); // Ensure amount is non-negative
                        row.querySelector('.spare-amount-sold').value = spareamount.toFixed(2);
                    });
                }
            }
        });

        $('#CreditInvoiceItemQuantityId').on('input', function () {
            var Creditproductprice = parseFloat(document.getElementById("CreditInvoiceItemPriceId").value);
            var Creditproductquantity = parseFloat(document.getElementById("CreditInvoiceItemQuantityId").value);

            if (!isNaN(Creditproductprice) && !isNaN(Creditproductquantity)) {
                var totalAmount = Creditproductquantity * Creditproductprice;
                document.getElementById("CreditInvoiceItemtotaAmountId").value = totalAmount.toFixed(2);
            }
        });

        $('#CreditInvoiceItemtotaAmountId').on('input', function () {
            var Creditproductprice = parseFloat(document.getElementById("CreditInvoiceItemPriceId").value);
            var totalAmount = parseFloat(document.getElementById("CreditInvoiceItemtotaAmountId").value);
            var VatValue = parseFloat(document.getElementById("CreditInvoiceVatvalueId").value);

            if (!isNaN(Creditproductprice) && !isNaN(totalAmount) && !isNaN(VatValue)) {
                var Creditproductquantity = totalAmount / Creditproductprice;
                var vatTotal = totalAmount * (VatValue / 100);
                document.getElementById("CreditInvoiceItemQuantityId").value = Creditproductquantity.toFixed(2);
                document.getElementById("CreditInvoiceVatTotalId").value = vatTotal.toFixed(2);
            }
        });
        // Function to add a new row to the table
        function addCreditInvoice() {
            if ($('#CreditInvoiceCashierId').val() == 0 || $('#CreditInvoiceCashierId').val() == "") {
                Swal.fire("Credit Invoice Not Created", 'Cashier/Attendant is Required', "warning");
                return;
            }
            if ($('#CreditInvoiceSearchCustomerId').val() == 0 || $('#CreditInvoiceSearchCustomerId').val() == "") {
                Swal.fire("Credit Invoice Not Created", 'Credit Customer is Required', "warning");
                return;
            }
            if ($('#CreditInvoiceProductVariationId').val() == 0 || $('#CreditInvoiceProductVariationId').val() == "") {
                Swal.fire("Credit Invoice Not Created", 'Product is Required', "warning");
                return;
            }
            if ($('#CreditInvoiceCustomerEquipmentId').val() == "") {
                Swal.fire("Credit Invoice Not Created", 'Equipment is Required', "warning");
                return;
            }
            if ($('#CreditInvoiceItemQuantityId').val() == 0 || $('#CreditInvoiceItemQuantityId').val() == "") {
                Swal.fire("Credit Invoice Not Created", 'Units is Required', "warning");
                return;
            }
            if ($('#CreditInvoiceItemtotaAmountId').val() == 0 || $('#CreditInvoiceItemtotaAmountId').val() == "") {
                Swal.fire("Credit Invoice Not Created", 'Total is Required', "warning");
                return;
            }
            if ($('#CreditInvoiceOrderNumberId').val() == 0 || $('#CreditInvoiceOrderNumberId').val() == "") {
                Swal.fire("Credit Invoice Not Created", 'Order Number is Required', "warning");
                return;
            }
            if ($('#CreditInvoiceRecieptNumberId').val() == 0 || $('#CreditInvoiceRecieptNumberId').val() == "") {
                Swal.fire("Credit Invoice Not Created", 'Receipt Number is Required', "warning");
                return;
            }
            var ShiftCreditInvoiceId = $('#CreditInvoiceId').val();
            var shiftId = $('#SystemstationShiftId').val();
            var cashierId = $('#CreditInvoiceCashierId').val();
            var cashierName = $('#CreditInvoiceCashierId').find("option:selected").text();
            var customerId = $('#CreditInvoiceSearchCustomerId').val();
            var customerName = $('#CreditInvoiceSearchCustomerId').find("option:selected").text();
            var equipmentId = $('#CreditInvoiceCustomerEquipmentId').val();
            var equipmentName = $('#CreditInvoiceCustomerEquipmentId').find("option:selected").text();
            var productId = $('#CreditInvoiceProductVariationId').val();
            var productName = $('#CreditInvoiceProductVariationId').find("option:selected").text();
            var units = $('#CreditInvoiceItemQuantityId').val();
            var productPrice = $('#CreditInvoiceItemPriceId').val();
            var productDiscount = $('#CreditInvoiceItemDiscountId').val();
            var productTotal = $('#CreditInvoiceItemtotaAmountId').val();
            var reference = $('#CreditInvoiceReferenceId').val();
            var vatTotal = $('#CreditInvoiceVatTotalId').val();
            var orderNumber = $('#CreditInvoiceOrderNumberId').val();
            var recieptNumber = $('#CreditInvoiceRecieptNumberId').val();

            var rowData = {
                ShiftCreditInvoiceId: ShiftCreditInvoiceId,
                ShiftId: shiftId,
                AttendantId: cashierId,
                CustomerId: customerId,
                EquipmentId: equipmentId,
                ProductVariationId: productId,
                ProductUnits: units,
                ProductPrice: productPrice,
                ProductDiscount: productDiscount,
                ProductTotal: productTotal,
                Reference: reference,
                VatTotal: vatTotal,
                OrderNumber: orderNumber,
                RecieptNumber: recieptNumber,
                Createdby: $('#systemLoggedinedUserid').val(), Modifiedby: $('#systemLoggedinedUserid').val(),
                DateCreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                DateModified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
            };
            $.post("/StationManagement/Addsystemstationshiftcreditinvoicedata", rowData, function (creditinvoiceResponse) {
                if (creditinvoiceResponse.RespStatus == 0) {
                    // Add the new row to the DataTable
                    $('#ShiftCreditInvoiceTable').DataTable().ajax.reload();
                    // Clear the form after adding a new row
                    clearCreditInvoiceForm();
                } else if (creditinvoiceResponse.RespStatus == 1) {
                    Swal.fire("Shift Details Not saved", creditinvoiceResponse.RespMessage, "warning");
                }
                else {
                    Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                }
            });

        }
        // Function to clear the form after adding a new row or updating
        function clearCreditInvoiceForm() {
            $('#CreditInvoiceId').val('');
            $('#CreditInvoiceShiftId').val('');
            $('#CreditInvoiceCashierId').val('');
            $('#CreditInvoiceSearchCustomerId').val('');
            $('#CreditInvoiceCustomerEquipmentId').val('');
            $('#CreditInvoiceProductVariationId').val('');
            $('#CreditInvoiceItemQuantityId').val('');
            $('#CreditInvoiceItemPriceId').val('');
            $('#CreditInvoiceItemDiscountId').val('');
            $('#CreditInvoiceItemtotaAmountId').val('');
            $('#CreditInvoiceReferenceId').val('');
            $('#CreditInvoiceVatTotalId').val('');
            $('#CreditInvoiceOrderNumberId').val('');
            $('#CreditInvoiceRecieptNumberId').val('');
        }

        $('#SystemWetproductquantityId').on('input', function () {
            var wetproductprice = parseFloat(document.getElementById("SystemWetproductpriceId").value);
            var wetproductquantity = parseFloat(document.getElementById("SystemWetproductquantityId").value);
            var wetproducttax = parseFloat(document.getElementById("SystemWetproducttaxId").value);
            var wetquantitydelivered = parseFloat(document.getElementById("SystemWetproductquantityId").value);
            var dipsbeforeoffloading = parseFloat(document.getElementById("DipsBeforeOffloadingId").value);


            if (!isNaN(wetproductprice) && !isNaN(wetproductquantity) && !isNaN(wetproducttax) && !isNaN(wetquantitydelivered) && !isNaN(dipsbeforeoffloading)) {
                var totalGrossAmount = wetproductquantity * wetproductprice;
                var totalNetAmount = totalGrossAmount - (totalGrossAmount * wetproducttax);
                var totalTaxAmount = totalGrossAmount * wetproducttax;
                var wetexpectedproductquantity = dipsbeforeoffloading + wetquantitydelivered;
                document.getElementById("SystemWetPurchaseGTotalAmountId").value = totalGrossAmount.toFixed(2);
                document.getElementById("SystemWetPurchaseNTotalAmountId").value = totalNetAmount.toFixed(2);
                document.getElementById("SystemWetPurchaseTaxAmountId").value = totalTaxAmount.toFixed(2);
                document.getElementById("DipsExpectedAfterOffloadId").value = wetexpectedproductquantity.toFixed(2);
            }
        });

        $('#SystemWetPurchaseGTotalAmountId').on('input', function () {
            var wetproductprice = parseFloat(document.getElementById("SystemWetproductpriceId").value);
            var totalGrossAmount = parseFloat(document.getElementById("SystemWetPurchaseGTotalAmountId").value);
            var wetproducttax = parseFloat(document.getElementById("SystemWetproducttaxId").value);

            if (!isNaN(wetproductprice) && !isNaN(totalGrossAmount) && !isNaN(wetproducttax)) {
                var wetproductquantity = totalGrossAmount / wetproductprice;
                var totalNetAmount = totalGrossAmount - (totalGrossAmount * wetproducttax);
                var totalTaxAmount = totalGrossAmount * wetproducttax;
                document.getElementById("SystemWetproductquantityId").value = wetproductquantity.toFixed(2);
                document.getElementById("SystemWetPurchaseNTotalAmountId").value = totalNetAmount.toFixed(2);
                document.getElementById("SystemWetPurchaseTaxAmountId").value = totalTaxAmount.toFixed(2);
            }
        });
        $('#DipsAfterOffloadingId').on('input', function () {
            var dipsafteroffloading = parseFloat(document.getElementById("DipsAfterOffloadingId").value);
            var dipsexpectedafteroffloading = parseFloat(document.getElementById("DipsExpectedAfterOffloadId").value);
            var quantityDelivered = parseFloat(document.getElementById("SystemWetproductquantityId").value);

            if (!isNaN(dipsafteroffloading) && !isNaN(dipsexpectedafteroffloading)) {
                var gainorlossafteroffload = dipsexpectedafteroffloading - dipsafteroffloading;
                var percentagegainorlossafteroffload = gainorlossafteroffload / quantityDelivered * 100;
                document.getElementById("GainLossAfterOffloadId").value = gainorlossafteroffload.toFixed(2);
                document.getElementById("PercentageGainLossAfterOffloadId").value = percentagegainorlossafteroffload.toFixed(2);
            }
        });

        // Function to add a new row to the table
        function addWetStockShiftPurchaseData() {
            if ($('#SystemWetInvoiceNumberId').val() == 0 || $('#SystemWetInvoiceNumberId').val() == "") {
                Swal.fire("Fuel Stock Purchase Not Created", 'Invoice Number is Required', "warning");
                return;
            }
            if ($('#SystemWetInvoiceAmountId').val() == 0 || $('#SystemWetInvoiceAmountId').val() == "") {
                Swal.fire("Fuel Stock Purchase Not Created", 'Invoice Amount is Required', "warning");
                return;
            }
            if ($('#SystemWetTransportAmountId').val() == 0 || $('#SystemWetTransportAmountId').val() == "") {
                Swal.fire("Fuel Stock Purchase Not Created", 'Transport Amount is Required', "warning");
                return;
            }
            if ($('#SystemWetsupplierId').val() == 0 || $('#SystemWetsupplierId').val() == "") {
                Swal.fire("Fuel Stock Purchase Not Created", 'Supplier is Required', "warning");
                return;
            }
            if ($('#SystemWetInvoiceDateId').val() == 0 || $('#SystemWetInvoiceDateId').val() == "") {
                Swal.fire("Fuel Stock Purchase Not Created", 'Invoice Date is Required', "warning");
                return;
            }
            if ($('#SystemWetTankId').val() == 0 || $('#SystemWetTankId').val() == "") {
                Swal.fire("Fuel Stock Purchase Not Created", 'Tank is Required', "warning");
                return;
            }
            if ($('#SystemWetProductVariationId').val() == 0 || $('#SystemWetProductVariationId').val() == "") {
                Swal.fire("Fuel Stock Purchase Not Created", 'Product Name is Required', "warning");
                return;
            }
            if ($('#DipsBeforeOffloadingId').val() == 0 || $('#DipsBeforeOffloadingId').val() == "") {
                Swal.fire("Fuel Stock Purchase Not Created", 'Dips Before is Required', "warning");
                return;
            }
            if ($('#SystemWetproductquantityId').val() == 0 || $('#SystemWetproductquantityId').val() == "") {
                Swal.fire("Fuel Stock Purchase Not Created", 'Quantity is Required', "warning");
                return;
            }
            if ($('#DipsAfterOffloadingId').val() == 0 || $('#DipsAfterOffloadingId').val() == "") {
                Swal.fire("Fuel Stock Purchase Not Created", 'Dips After is Required', "warning");
                return;
            }
            var PurchaseId = $('#SystemWetPurchaseId').val();
            var ShiftId = $('#SystemstationShiftId').val();
            var WetDryPurchase = "WetStockPurchase";
            var InvoiceNumber = $('#SystemWetInvoiceNumberId').val();
            var SupplierId = $('#SystemWetsupplierId').val();
            var InvoiceAmount = $('#SystemWetInvoiceAmountId').val().replace(/,/g, '');
            var TransportAmount = $('#SystemWetTransportAmountId').val().replace(/,/g, '');
            var InvoiceDate = $('#SystemWetInvoiceDateId').val();
            var TruckNumber = $('#SystemWetInvoiceTruckNumberId').val();
            var DriverName = $('#SystemWetInvoiceDriverNameId').val();
            var PurchaseItemId = $('#SystemWetPurchaseItemId').val();
            var ProductVariationId = $('#SystemWetProductVariationId').val();
            var ProductVariationName = $('#SystemWetProductVariationId').find("option:selected").text();
            var TankId = $('#SystemWetTankId').val();
            var TankName = $('#SystemWetTankId').find("option:selected").text();
            var DipsBeforeOffloading = $('#DipsBeforeOffloadingId').val();
            var PurchaseQuantity = $('#SystemWetproductquantityId').val();
            var DipsAfterOffloading = $('#DipsAfterOffloadingId').val();
            var ExpectedQuantity = $('#DipsExpectedAfterOffloadId').val();
            var GainLoss = $('#GainLossAfterOffloadId').val();
            var PercentageGainLoss = $('#PercentageGainLossAfterOffloadId').val();
            var PurchasePrice = $('#SystemWetproductpriceId').val();
            var PurchaseTax = $('#SystemWetproducttaxId').val();
            var PurchaseDiscount = 0;
            var PurchaseGTotal = $('#SystemWetPurchaseGTotalAmountId').val();
            var PurchaseNTotal = $('#SystemWetPurchaseNTotalAmountId').val();
            var PurchaseTaxAmount = $('#SystemWetPurchaseTaxAmountId').val();

            var ShiftWetStockPurchaseData = {
                PurchaseId: PurchaseId,
                ShiftId: ShiftId,
                WetDryPurchase: "WetStockPurchase",
                InvoiceNumber: InvoiceNumber,
                SupplierId: SupplierId,
                InvoiceAmount: InvoiceAmount,
                TransportAmount: TransportAmount,
                InvoiceDate: InvoiceDate,
                TruckNumber: TruckNumber,
                DriverName: DriverName,
                PurchaseItemId: PurchaseItemId,
                TankId: TankId,
                ProductVariationId: ProductVariationId,
                DipsBeforeOffloading: DipsBeforeOffloading,
                PurchaseQuantity: PurchaseQuantity,
                DipsAfterOffloading: DipsAfterOffloading,
                ExpectedQuantity: ExpectedQuantity,
                Gainloss: GainLoss,
                PercentGainloss: PercentageGainLoss,
                PurchasePrice: PurchasePrice,
                PurchaseTax: PurchaseTax,
                PurchaseDiscount: PurchaseDiscount,
                PurchaseGTotal: PurchaseGTotal,
                PurchaseNTotal: PurchaseNTotal,
                PurchaseTaxAmount: PurchaseTaxAmount,
                Createdby: $('#systemLoggedinedUserid').val(), Modifiedby: $('#systemLoggedinedUserid').val(),
                DateCreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                DateModified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
            };

            $.post("/StationManagement/Addsystemstationshiftwetpurchasedata", ShiftWetStockPurchaseData, function (wetStockPurchaseResponse) {
                if (wetStockPurchaseResponse.RespStatus == 0) {
                    // Add the new row to the DataTable
                    $('#ShiftWetStockPurchaseTable').DataTable().ajax.reload();
                    // Clear the form after adding a new row
                    clearWetStockForm();
                } else if (wetStockPurchaseResponse.RespStatus == 1) {
                    Swal.fire("Shift Details Not saved", wetStockPurchaseResponse.RespMessage, "warning");
                }
                else {
                    Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                }
            });
        }
        function clearWetStockForm() {
            $('#SystemWetPurchaseItemId').val('');
            $('#SystemItemWetPurchaseId').val('');
            $('#SystemWetTankId').val('');
            $('#SystemWetProductVariationId').val('');
            $('#DipsBeforeOffloadingId').val('');
            $('#SystemWetproductquantityId').val('');
            $('#SystemWetproductpriceId').val('');
            $('#DipsAfterOffloadingId').val('');
            $('#DipsExpectedAfterOffloadId').val('');
            $('#GainLossAfterOffloadId').val('');
            $('#PercentageGainLossAfterOffloadId').val('');
            $('#SystemWetPurchaseGTotalAmountId').val('');
            $('#SystemWetPurchaseNTotalAmountId').val('');
            $('#SystemWetPurchaseTaxAmountId').val('');
        }

        $('#SystemDryproductquantityId').on('input', function () {
            var dryproductprice = parseFloat(document.getElementById("SystemDryproductpriceId").value);
            var dryproductquantity = parseFloat(document.getElementById("SystemDryproductquantityId").value);
            var dryproducttax = parseFloat(document.getElementById("SystemDryproducttaxId").value);

            if (!isNaN(dryproductprice) && !isNaN(dryproductquantity) && !isNaN(dryproducttax)) {
                var totalGrossAmount = dryproductquantity * dryproductprice;
                var totalNetAmount = totalGrossAmount - (totalGrossAmount * dryproducttax);
                var totalTaxAmount = totalGrossAmount * dryproducttax;
                document.getElementById("SystemDryPurchaseGTotalAmountId").value = totalGrossAmount.toFixed(2);
                document.getElementById("SystemDryPurchaseNTotalAmountId").value = totalNetAmount.toFixed(2);
                document.getElementById("SystemDryPurchaseTaxAmountId").value = totalTaxAmount.toFixed(2);
            }
        });

        $('#SystemDryPurchaseGTotalAmountId').on('input', function () {
            var dryproductprice = parseFloat(document.getElementById("SystemDryproductpriceId").value);
            var totalGrossAmount = parseFloat(document.getElementById("SystemDryPurchaseGTotalAmountId").value);
            var dryproducttax = parseFloat(document.getElementById("SystemDryproducttaxId").value);

            if (!isNaN(dryproductprice) && !isNaN(totalGrossAmount) && !isNaN(dryproducttax)) {
                var dryproductquantity = totalGrossAmount / dryproductprice;
                var totalNetAmount = totalGrossAmount - (totalGrossAmount * dryproducttax);
                var totalTaxAmount = totalGrossAmount * dryproducttax;
                document.getElementById("SystemDryproductquantityId").value = dryproductquantity.toFixed(2);
                document.getElementById("SystemDryPurchaseNTotalAmountId").value = totalNetAmount.toFixed(2);
                document.getElementById("SystemDryPurchaseTaxAmountId").value = totalTaxAmount.toFixed(2);
            }
        });


        // Function to add a new row to the table
        function addDryStockShiftPurchaseData() {
            if ($('#SystemDryInvoiceNumberId').val() == 0 || $('#SystemDryInvoiceNumberId').val() == "") {
                Swal.fire("Dry Stock Purchase Not Created", 'Invoice Number is Required', "warning");
                return;
            }
            if ($('#SystemDryInvoiceAmountId').val() == 0 || $('#SystemDryInvoiceAmountId').val() == "") {
                Swal.fire("Dry Stock Purchase Not Created", 'Invoice Amount is Required', "warning");
                return;
            }
            if ($('#SystemDryTransportAmountId').val() == 0 || $('#SystemDryTransportAmountId').val() == "") {
                Swal.fire("Dry Stock Purchase Not Created", 'Transport Amount is Required', "warning");
                return;
            }
            if ($('#SystemDrysupplierId').val() == 0 || $('#SystemDrysupplierId').val() == "") {
                Swal.fire("Dry Stock Purchase Not Created", 'Supplier is Required', "warning");
                return;
            }
            if ($('#SystemDryInvoiceDateId').val() == 0 || $('#SystemDryInvoiceDateId').val() == "") {
                Swal.fire("Dry Stock Purchase Not Created", 'Invoice Date is Required', "warning");
                return;
            }


            if ($('#SystemDryProductVariationId').val() == 0 || $('#SystemDryProductVariationId').val() == "") {
                Swal.fire("Dry Stock Purchase Not Created", 'Product is Required', "warning");
                return;
            }
            if ($('#SystemDryproductquantityId').val() == 0 || $('#SystemDryproductquantityId').val() == "") {
                Swal.fire("Dry Stock Purchase Not Created", 'Quantity is Required', "warning");
                return;
            }
            if ($('#SystemDryproductpriceId').val() == 0 || $('#SystemDryproductpriceId').val() == "") {
                Swal.fire("Dry Stock Purchase Not Created", 'Price is Required', "warning");
                return;
            }
            if ($('#SystemDryPurchaseGTotalAmountId').val() == 0 || $('#SystemDryPurchaseGTotalAmountId').val() == "") {
                Swal.fire("Dry Stock Purchase Not Created", 'Amount is Required', "warning");
                return;
            }
            var PurchaseId = $('#SystemDryPurchaseId').val();
            var ShiftId = $('#SystemstationShiftId').val();
            var WetDryPurchase = "DryStockPurchase";
            var InvoiceNumber = $('#SystemDryInvoiceNumberId').val();
            var SupplierId = $('#SystemDrysupplierId').val();
            var InvoiceAmount = $('#SystemDryInvoiceAmountId').val().replace(/,/g, '');
            var TransportAmount = $('#SystemDryTransportAmountId').val().replace(/,/g, '');
            var InvoiceDate = $('#SystemDryInvoiceDateId').val();
            var TruckNumber = $('#SystemDryInvoiceTruckNumberId').val();
            var DriverName = $('#SystemDryInvoiceDriverNameId').val();
            var PurchaseItemId = $('#SystemDryPurchaseItemId').val();
            var TankId = 0;
            var ProductVariationId = $('#SystemDryProductVariationId').val();
            var ProductVariationName = $('#SystemDryProductVariationId').find("option:selected").text();
            var DipsBeforeOffloading = 0;
            var PurchaseQuantity = $('#SystemDryproductquantityId').val();
            var DipsAfterOffloading = 0;
            var ExpectedQuantity = 0;
            var GainLoss = 0;
            var PercentageGainLoss = 0;
            var PurchasePrice = $('#SystemDryproductpriceId').val();
            var PurchaseTax = $('#SystemDryproducttaxId').val();
            var PurchaseDiscount = 0;
            var PurchaseGTotal = $('#SystemDryPurchaseGTotalAmountId').val();
            var PurchaseNTotal = $('#SystemDryPurchaseNTotalAmountId').val();
            var PurchaseTaxAmount = $('#SystemDryPurchaseTaxAmountId').val();

            var ShiftDryStockPurchaseData = {
                PurchaseId: PurchaseId,
                ShiftId: ShiftId,
                WetDryPurchase: WetDryPurchase,
                InvoiceNumber: InvoiceNumber,
                SupplierId: SupplierId,
                InvoiceAmount: InvoiceAmount,
                TransportAmount: TransportAmount,
                InvoiceDate: InvoiceDate,
                TruckNumber: TruckNumber,
                DriverName: DriverName,
                PurchaseItemId: PurchaseItemId,
                TankId: TankId,
                ProductVariationId: ProductVariationId,
                DipsBeforeOffloading: DipsBeforeOffloading,
                PurchaseQuantity: PurchaseQuantity,
                DipsAfterOffloading: DipsAfterOffloading,
                ExpectedQuantity: ExpectedQuantity,
                Gainloss: GainLoss,
                PercentGainloss: PercentageGainLoss,
                PurchasePrice: PurchasePrice,
                PurchaseTax: PurchaseTax,
                PurchaseDiscount: PurchaseDiscount,
                PurchaseGTotal: PurchaseGTotal,
                PurchaseNTotal: PurchaseNTotal,
                PurchaseTaxAmount: PurchaseTaxAmount,
                Createdby: $('#systemLoggedinedUserid').val(), Modifiedby: $('#systemLoggedinedUserid').val(),
                DateCreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                DateModified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
            };

            $.post("/StationManagement/Addsystemstationshiftdrypurchasedata", ShiftDryStockPurchaseData, function (dryStockPurchaseResponse) {
                if (dryStockPurchaseResponse.RespStatus == 0) {
                    // Add the new row to the DataTable
                    $('#ShiftDryStockPurchaseTable').DataTable().ajax.reload();
                    // Clear the form after adding a new row
                    clearDryStockForm();
                } else if (dryStockPurchaseResponse.RespStatus == 1) {
                    Swal.fire("Shift Details Not saved", dryStockPurchaseResponse.RespMessage, "warning");
                }
                else {
                    Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                }
            });
        }

        function clearDryStockForm() {
            $('#SystemDryProductVariationId').val('');
            $('#SystemDryproductquantityId').val('');
            $('#SystemDryproductpriceId').val('');
            $('#SystemDryproductDiscountId').val('');
            $('#SystemDryPurchaseGTotalAmountId').val('');
            $('#SystemDryPurchaseNTotalAmountId').val('');
            $('#SystemDryPurchaseTaxAmountId').val('');
        }


        // Function to add a new row to the table
        function addExpensesCollectionVoucher() {
            if ($('#ExpensesCollectionCashierId').val() == 0 || $('#ExpensesCollectionCashierId').val() == "") {
                Swal.fire("Shift Expense Not Created", 'Cashier/Attendant is Required', "warning");
                return;
            }
            if ($('#ExpensesCollectionModeId').val() == 0 || $('#ExpensesCollectionModeId').val() == "") {
                Swal.fire("Shift Expense Not Created", 'Mode is Required', "warning");
                return;
            }
            if ($('#ExpensesCollectionTypeNameId').val() == 0 || $('#ExpensesCollectionTypeNameId').val() == "") {
                Swal.fire("Shift Expense Not Created", 'Name is Required', "warning");
                return;
            }
            if ($('#ExpensesCollectionAmountId').val() == 0 || $('#ExpensesCollectionAmountId').val() == "") {
                Swal.fire("Shift Expense Not Created", 'Amount is Required', "warning");
                return;
            }

            var ShiftVoucherId = $('#ExpensesCollectionVoucherId').val();
            var shiftId = $('#SystemstationShiftId').val();
            var cashierId = $('#ExpensesCollectionCashierId').val();
            var cashierName = $('#ExpensesCollectionCashierId').find("option:selected").text();
            var shiftexpenseModeId = $('#ExpensesCollectionModeId').val();
            var shiftexpenseModeName = $('#ExpensesCollectionModeId').find("option:selected").text();
            var shiftexpenseName = $('#ExpensesCollectionTypeNameId').val();
            var shiftexpenseAmount = $('#ExpensesCollectionAmountId').val();
            var ShiftExpenseData = {
                ShiftVoucherId: ShiftVoucherId,
                ShiftId: shiftId,
                AttendantId: cashierId,
                VoucherType: "ShiftExpenses",
                CreditDebit: "Debit",
                VoucherModeId: shiftexpenseModeId,
                VoucherName: shiftexpenseName,
                ProductVariationId: 0,
                ProductQuantity: 0,
                ProductPrice: 0,
                ProductDiscount: 0,
                VoucherAmount: shiftexpenseAmount,
                VatAmount: 0,
                RecieptNumber: '',
                CardNumber: '',
                Createdby: $('#systemLoggedinedUserid').val(), Modifiedby: $('#systemLoggedinedUserid').val(),
                DateCreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                DateModified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
            };
            $.post("/StationManagement/Addsystemstationshiftexpensedata", ShiftExpenseData, function (expensesResponse) {
                if (expensesResponse.RespStatus == 0) {
                    // Add the new row to the DataTable
                    $('#ShiftExpensesTable').DataTable().ajax.reload();
                    // Clear the form after adding a new row
                    clearExpensesForm();
                } else if (expensesResponse.RespStatus == 1) {
                    Swal.fire("Shift Details Not saved", expensesResponse.RespMessage, "warning");
                }
                else {
                    Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                }
            });
        }

        function clearExpensesForm() {
            $('#ExpensesCollectionVoucherId').val('');
            $('#ExpensesCollectionShiftId').val('');
            $('#ExpensesCollectionCashierId').val('');
            $('#ExpensesCollectionModeId').val('');
            $('#ExpensesCollectionTypeNameId').val('');
            $('#ExpensesCollectionAmountId').val('');
        }

        // Function to add a new row to the table
        function addMpesaCollectionVoucher() {
            if ($('#MpesaCollectionCashierId').val() == 0 || $('#MpesaCollectionCashierId').val() == "") {
                Swal.fire("Mpesa Not Created", 'Cashier/Attendant is Required', "warning");
                return;
            }
            if ($('#MpesaCollectionModeId').val() == 0 || $('#MpesaCollectionModeId').val() == "") {
                Swal.fire("Mpesa Not Created", 'Mode is Required', "warning");
                return;
            }
            if ($('#MpesaProductVariationId').val() == 0 || $('#MpesaProductVariationId').val() == "") {
                Swal.fire("Mpesa Not Created", 'Product is Required', "warning");
                return;
            }
            if ($('#MpesaCollectionAmountId').val() == 0 || $('#MpesaCollectionAmountId').val() == "") {
                Swal.fire("Mpesa Not Created", 'Amount is Required', "warning");
                return;
            }
            var ShiftVoucherId = $('#MpesaCollectionVoucherId').val();
            var shiftId = $('#SystemstationShiftId').val();
            var cashierId = $('#MpesaCollectionCashierId').val();
            var cashierName = $('#MpesaCollectionCashierId').find("option:selected").text();
            var mpesaModeId = $('#MpesaCollectionModeId').val();
            var mpesaModeName = $('#MpesaCollectionModeId').find("option:selected").text();
            var mpesaProduct = $('#MpesaProductVariationId').val();
            var mpesaProductName = $('#MpesaProductVariationId').find("option:selected").text();
            var mpesaPrice = $('#MpesaCollectionPriceId').val();
            var mpesaQuantity = $('#MpesaCollectionQuantityId').val();
            var mpesaDiscount = $('#MpesaCollectionDiscountId').val();
            var mpesaAmount = $('#MpesaCollectionAmountId').val();
            var mpesaVatAmount = $('#MpesaCollectionVatAmountId').val();

            var ShiftMpesaCollectionData = {
                ShiftVoucherId: ShiftVoucherId,
                ShiftId: shiftId,
                AttendantId: cashierId,
                VoucherType: "ShiftMpesaCollection",
                CreditDebit: "Credit",
                VoucherModeId: mpesaModeId,
                ProductVariationId: mpesaProduct,
                ProductPrice: mpesaPrice,
                ProductQuantity: mpesaQuantity,
                ProductDiscount: mpesaDiscount,
                VoucherAmount: mpesaAmount,
                VatAmount: mpesaVatAmount,
                RecieptNumber: '',
                CardNumber: '',
                Createdby: $('#systemLoggedinedUserid').val(), Modifiedby: $('#systemLoggedinedUserid').val(),
                DateCreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                DateModified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
            };
            $.post("/StationManagement/Addsystemstationshiftmpesadata", ShiftMpesaCollectionData, function (mpesaCollectionResponse) {
                if (mpesaCollectionResponse.RespStatus == 0) {
                    // Add the new row to the DataTable
                    $('#ShiftMpesaCollectionTable').DataTable().ajax.reload();
                    // Clear the form after adding a new row
                    clearMpesaForm();
                } else if (mpesaCollectionResponse.RespStatus == 1) {
                    Swal.fire("Shift Details Not saved", mpesaCollectionResponse.RespMessage, "warning");
                }
                else {
                    Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                }
            });
        }
        // Function to clear the form after adding a new row or updating
        function clearMpesaForm() {
            $('#MpesaCollectionVoucherId').val('');
            $('#MpesaCollectionShiftId').val('');
            $('#MpesaCollectionCashierId').val('');
            $('#MpesaProductVariationId').val('');
            $('#MpesaCollectionPriceId').val('');
            $('#MpesaCollectionQuantityId').val('');
            $('#MpesaCollectionDiscountId').val('');
            $('#MpesaCollectionAmountId').val('');
            $('#MpesaCollectionVatId').val('');
            $('#MpesaCollectionVatAmountId').val('');
        }


        // Function to add a new row to the table
        function addFuelCardCollectionVoucher() {
            if ($('#FuelCardCollectionCashierId').val() == 0 || $('#FuelCardCollectionCashierId').val() == "") {
                Swal.fire("FuelCard Not Created", 'Cashier/Attendant is Required', "warning");
                return;
            }
            if ($('#FuelCardCollectionModeId').val() == 0 || $('#FuelCardCollectionModeId').val() == "") {
                Swal.fire("FuelCard Not Created", 'Mode is Required', "warning");
                return;
            }
            if ($('#SystemFuelCardProductVariationId').val() == 0 || $('#SystemFuelCardProductVariationId').val() == "") {
                Swal.fire("FuelCard Not Created", 'Product is Required', "warning");
                return;
            }
            if ($('#FuelCardCollectionAmountId').val() == 0 || $('#FuelCardCollectionAmountId').val() == "") {
                Swal.fire("FuelCard Not Created", 'Amount is Required', "warning");
                return;
            }
            var ShiftVoucherId = $('#FuelCardCollectionVoucherId').val();
            var shiftId = $('#SystemstationShiftId').val();
            var cashierId = $('#FuelCardCollectionCashierId').val();
            var cashierName = $('#FuelCardCollectionCashierId').find("option:selected").text();
            var fuelcardModeId = $('#FuelCardCollectionModeId').val();
            var fuelcardModeName = $('#FuelCardCollectionModeId').find("option:selected").text();
            var fuelcardProduct = $('#SystemFuelCardProductVariationId').val();
            var fuelcardProductName = $('#SystemFuelCardProductVariationId').find("option:selected").text();
            var fuelcardPrice = $('#FuelCardCollectionPriceId').val();
            var fuelcardQuantity = $('#FuelCardCollectionQuantityId').val();
            var fuelcardDiscount = $('#FuelCardCollectionDiscountId').val();
            var fuelcardAmount = $('#FuelCardCollectionAmountId').val();
            var fuelcardVatAmount = $('#FuelCardCollectionVatAmountId').val();

            var ShiftFuelCardCollectionData = {
                ShiftVoucherId: ShiftVoucherId,
                ShiftId: shiftId,
                AttendantId: cashierId,
                VoucherType: "ShiftFuelCardCollection",
                CreditDebit: "Credit",
                VoucherModeId: fuelcardModeId,
                ProductVariationId: fuelcardProduct,
                ProductPrice: fuelcardPrice,
                ProductQuantity: fuelcardQuantity,
                ProductDiscount: fuelcardDiscount,
                VoucherAmount: fuelcardAmount,
                VatAmount: fuelcardVatAmount,
                RecieptNumber: '',
                CardNumber: '',
                Createdby: $('#systemLoggedinedUserid').val(), Modifiedby: $('#systemLoggedinedUserid').val(),
                DateCreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                DateModified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
            };

            $.post("/StationManagement/Addsystemstationshiftfuelcarddata", ShiftFuelCardCollectionData, function (fuelCardCollectionResponse) {
                if (fuelCardCollectionResponse.RespStatus == 0) {
                    // Add the new row to the DataTable
                    $('#ShiftFuelCardCollectionTable').DataTable().ajax.reload();
                    // Clear the form after adding a new row
                    clearFuelCardForm();
                } else if (fuelCardCollectionResponse.RespStatus == 1) {
                    Swal.fire("Shift Details Not saved", fuelCardCollectionResponse.RespMessage, "warning");
                }
                else {
                    Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                }
            });
        }
        // Function to clear the form after adding a new row or updating
        function clearFuelCardForm() {
            $('#FuelCardCollectionVoucherId').val('');
            $('#FuelCardCollectionShiftId').val('');
            $('#FuelCardCollectionCashierId').val('');
            $('#SystemFuelCardProductVariationId').val('');
            $('#FuelCardCollectionPriceId').val('');
            $('#FuelCardCollectionQuantityId').val('');
            $('#FuelCardCollectionDiscountId').val('');
            $('#FuelCardCollectionAmountId').val('');
            $('#FuelCardCollectionVatAmountId').val('');
        }

        // Function to add a new row to the table
        function addMerchantCollectionVoucher() {
            if ($('#MerchantCollectionCashierId').val() == 0 || $('#MerchantCollectionCashierId').val() == "") {
                Swal.fire("Merchant Not Created", 'Cashier/Attendant is Required', "warning");
                return;
            }
            if ($('#MerchantCollectionModeId').val() == 0 || $('#MerchantCollectionModeId').val() == "") {
                Swal.fire("Merchant Not Created", 'Mode is Required', "warning");
                return;
            }
            if ($('#SystemMerchantProductVariationId').val() == 0 || $('#SystemMerchantProductVariationId').val() == "") {
                Swal.fire("FuelCard Not Created", 'Product is Required', "warning");
                return;
            }
            if ($('#MerchantCardCollectionAmountId').val() == 0 || $('#MerchantCardCollectionAmountId').val() == "") {
                Swal.fire("Merchant Not Created", 'Amount is Required', "warning");
                return;
            }
            if ($('#MerchantCollectionCardNumberId').val() == 0 || $('#MerchantCollectionCardNumberId').val() == "") {
                Swal.fire("Merchant Not Created", 'Card Number is Required', "warning");
                return;
            }
            if ($('#MerchantCollectionReceiptNumberId').val() == 0 || $('#MerchantCollectionReceiptNumberId').val() == "") {
                Swal.fire("Merchant Not Created", 'Reciept Number is Required', "warning");
                return;
            }

            var ShiftVoucherId = $('#MerchantCollectionVoucherId').val();
            var shiftId = $('#SystemstationShiftId').val();
            var cashierId = $('#MerchantCollectionCashierId').val();
            var cashierName = $('#MerchantCollectionCashierId').find("option:selected").text();
            var merchantModeId = $('#MerchantCollectionModeId').val();
            var merchantModeName = $('#MerchantCollectionModeId').find("option:selected").text();
            var merchantProduct = $('#SystemMerchantProductVariationId').val();
            var merchantProductName = $('#SystemMerchantProductVariationId').find("option:selected").text();
            var merchantPrice = $('#MerchantCollectionPriceId').val();
            var merchantQuantity = $('#MerchantCollectionQuantityId').val();
            var merchantDiscount = $('#MerchantCollectionDiscountId').val();
            var merchantAmount = $('#MerchantCollectionAmountId').val();
            var merchantVatAmount = $('#MerchantCollectionVatAmountId').val();
            var merchantCardNumber = $('#MerchantCollectionCardNumberId').val();
            var merchantRecieptNumber = $('#MerchantCollectionReceiptNumberId').val();
            var merchantActions = '<button class="btn-info btn-xs btn-outline-info text-white font-weight-bold text-uppercase m-1" onclick="editMerchantVoucher(this.parentNode.parentNode)">Edit</button><button class="btn-info btn-xs btn-outline-info text-white font-weight-bold text-uppercase m-1" onclick="updateMerchantVoucher(this.parentNode.parentNode)">Update</button>';

            var ShiftMerchantCollectionData = {
                ShiftVoucherId: ShiftVoucherId,
                ShiftId: shiftId,
                AttendantId: cashierId,
                VoucherType: "ShiftMerchantCollection",
                CreditDebit: "Credit",
                VoucherModeId: merchantModeId,
                ProductVariationId: merchantProduct,
                ProductPrice: merchantPrice,
                ProductQuantity: merchantQuantity,
                ProductDiscount: merchantDiscount,
                VoucherAmount: merchantAmount,
                VatAmount: merchantVatAmount,
                CardNumber: merchantCardNumber,
                RecieptNumber: merchantRecieptNumber,
                Createdby: $('#systemLoggedinedUserid').val(), Modifiedby: $('#systemLoggedinedUserid').val(),
                DateCreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                DateModified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
            };


            $.post("/StationManagement/Addsystemstationshiftmerchantdata", ShiftMerchantCollectionData, function (merchantResponse) {
                if (merchantResponse.RespStatus == 0) {
                    // Add the new row to the DataTable
                    $('#ShiftMerchantCollectionTable').DataTable().ajax.reload();
                    // Clear the form after adding a new row
                    clearMerchantForm();
                } else if (merchantResponse.RespStatus == 1) {
                    Swal.fire("Shift Details Not saved", merchantResponse.RespMessage, "warning");
                }
                else {
                    Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                }
            });

        }

        // Function to clear the form after adding a new row or updating
        function clearMerchantForm() {
            $('#MerchantCollectionVoucherId').val('');
            $('#MerchantCollectionShiftId').val('');
            $('#MerchantCollectionModeId').val('');
            $('#MerchantCollectionCashierId').val('');
            $('#SystemMerchantProductVariationId').val('');
            $('#MerchantCollectionPriceId').val('');
            $('#MerchantCollectionQuantityId').val('');
            $('#MerchantCollectionDiscountId').val('');
            $('#MerchantCollectionAmountId').val('');
            $('#MerchantCollectionVatAmountId').val('');
            $('#MerchantCollectionCardNumberId').val('');
            $('#MerchantCollectionReceiptNumberId').val('');
        }

        // Function to add a new row to the table
        function addShiftTopupData() {
            if ($('#ShiftTopupCashierId').val() == 0 || $('#ShiftTopupCashierId').val() == "") {
                Swal.fire("Topup Not Created", 'Cashier/Attendant is Required', "warning");
                return;
            }
            if ($('#ShiftTopupAmountId').val() == 0 || $('#ShiftTopupAmountId').val() == "") {
                Swal.fire("Topup Not Created", 'Amount is Required', "warning");
                return;
            }
            var shiftTopupId = $('#shiftTopupId').val();
            var shiftId = $('#SystemstationShiftId').val();
            var cashierId = $('#ShiftTopupCashierId').val();
            var cashierName = $('#ShiftTopupCashierId').find("option:selected").text();
            var shiftTopupAmount = $('#ShiftTopupAmountId').val();
            var topupReference = $('#ShiftTopupReferenceId').val();
            var ShiftTopupData = {
                ShiftTopupId: shiftTopupId,
                ShiftId: shiftId,
                AttendantId: cashierId,
                TopupAmount: shiftTopupAmount,
                TopupReference: topupReference,
                IsReversed: 0,
                Createdby: $('#systemLoggedinedUserid').val(), Modifiedby: $('#systemLoggedinedUserid').val(),
                DateCreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                DateModified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
            };


            $.post("/StationManagement/Addsystemstationshifttopupdata", ShiftTopupData, function (topupResponse) {
                if (topupResponse.RespStatus == 0) {
                    // Add the new row to the DataTable
                    $('#ShiftTopupTable').DataTable().ajax.reload();
                    // Clear the form after adding a new row
                    clearShiftTopupForm();
                } else if (topupResponse.RespStatus == 1) {
                    Swal.fire("Shift Details Not saved", topupResponse.RespMessage, "warning");
                }
                else {
                    Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                }
            });
        }

        // Function to clear the form after adding a new row or updating
        function clearShiftTopupForm() {
            $('#shiftTopupId').val('');
            $('#ShiftTopupCashierId').val('');
            $('#ShiftTopupAmountId').val('');
            $('#ShiftTopupReferenceId').val('');
        }


        // Function to add a new row to the table
        function addShiftPaymentData() {
            if ($('#ShiftPayementCustomerId').val() == 0 || $('#ShiftPayementCustomerId').val() == "") {
                Swal.fire("Payment Not Created", 'Customer is Required', "warning");
                return;
            }
            if ($('#ShiftPaymentCashierId').val() == 0 || $('#ShiftPaymentCashierId').val() == "") {
                Swal.fire("Payment Not Created", 'Cashier/Attendant is Required', "warning");
                return;
            }
            if ($('#ShiftPaymentModeId').val() == 0 || $('#ShiftPaymentModeId').val() == "") {
                Swal.fire("Payment Not Created", 'Payment Mode is Required', "warning");
                return;
            }
            if ($('#ShiptPaymentAmountId').val() == 0 || $('#ShiptPaymentAmountId').val() == "") {
                Swal.fire("Payment Not Created", 'Amount is Required', "warning");
                return;
            }
            var shiftPaymentId = $('#ShiftPaymentId').val();
            var shiftId = $('#SystemstationShiftId').val();
            var customerId = $('#ShiftPayementCustomerId').val();
            var customerName = $('#ShiftPayementCustomerId').find("option:selected").text();
            var cashierId = $('#ShiftPaymentCashierId').val();
            var cashierName = $('#ShiftPaymentCashierId').find("option:selected").text();
            var paymentModeId = $('#ShiftPaymentModeId').val();
            var paymentModeName = $('#ShiftPaymentModeId').find("option:selected").text();
            var shiftPaymentAmount = $('#ShiftPaymentAmountId').val();
            var shiftPaymentReference = $('#ShiftPaymentReferenceId').val();

            var ShiftPaymentData = {
                ShiftPaymentId: shiftPaymentId,
                ShiftId: shiftId,
                CustomerId: customerId,
                AttendantId: cashierId,
                PaymentModeId: paymentModeId,
                PaymentAmount: shiftPaymentAmount,
                PaymentReference: shiftPaymentReference,
                Createdby: $('#systemLoggedinedUserid').val(), Modifiedby: $('#systemLoggedinedUserid').val(),
                DateCreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                DateModified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
            };
            $.post("/StationManagement/Addsystemstationshiftpaymentdata", ShiftPaymentData, function (paymentResponse) {
                if (paymentResponse.RespStatus == 0) {
                    // Add the new row to the DataTable
                    $('#ShiftPaymentTable').DataTable().ajax.reload();
                    // Clear the form after adding a new row
                    clearShiftPaymentForm();
                } else if (paymentResponse.RespStatus == 1) {
                    Swal.fire("Shift Details Not saved", paymentResponse.RespMessage, "warning");
                }
                else {
                    Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                }
            });
        }
        // Function to clear the form after adding a new row or updating
        function clearShiftPaymentForm() {
            $('#shiftPaymentId').val('');
            $('#ShiftPayementCustomerId').val('');
            $('#ShiftPaymentCashierId').val('');
            $('#ShiftPaymentModeId').val('');
            $('#ShiftPaymentAmountId').val('');
            $('#ShiftPaymentReferenceId').val('');
        }

        function hideordisplayvouchernameandchangecolumn() {
            var selectedOption = $('#VoucherTypeId').val();
            if (selectedOption === 'Contra') {
                $('#voucherNameColumn').hide();
                $('#voucherAmountColumn').removeClass('col-sm-6').addClass('col-sm-12');
            } else {
                $('#voucherNameColumn').show();
                $('#voucherAmountColumn').removeClass('col-sm-12').addClass('col-sm-6');
            }
        };
        function Getsystemcustomerdetaildata(customerId) {
            var onj = "<option value=''>Select Equipment</option><option value='0'>NA</option>";
            if (customerId == "") { $('#CreditInvoiceCustomerEquipmentId').html(onj); return; }
            $.get("/CustomerManagement/Getsystemcustomerequipmentdata/" + customerId, null, function (data) {
                $.each(data, function (a, x) { onj = onj + "<option value='" + x.Value + "'>" + x.Text + "</option>"; })
                $('#CreditInvoiceCustomerEquipmentId').html(onj);
                $("#CreditInvoiceSearchCustomerId").val(customerId)
                $("#CustomerEquipmentRowId").show();
            });
        }

        function Getshiftpurchasequantitydata(ShiftId, TankId, callback) {
            $.get("/StationManagement/Getsystemstationtankshiftpurchasedata?ShiftId=" + ShiftId + "&TankId=" + TankId, null, function (data) {
                var purchaseQuantity = parseFloat(data);
                callback(purchaseQuantity);
            });
        }
        function Getshiftdryproductpurchasequantitydata(ShiftId, ProductId, callback) {
            $.get("/StationManagement/Getsystemstationdryproductshiftpurchasedata?ShiftId=" + ShiftId + "&ProductId=" + ProductId, null, function (data) {
                var purchaseQuantity = parseFloat(data);
                callback(purchaseQuantity);
            });
        }


        // Event listener for input changes
        document.addEventListener('input', function (event) {
            var target = event.target;
            // Check if the changed input is in the detail table
            if (target.closest('#shiftdetail-table')) {
                // Recalculate and update detail table totals
                updateDetailTableTotals();
                // Update summary table totals
                updateSummaryTableTotals();
            }
        });

        // Function to recalculate detail table totals
        function updateDetailTableTotals() {
            var detailRows = document.querySelectorAll('#shiftdetail-table tbody tr');
            detailRows.forEach(function (row) {
                var openingRead = parseFloat(row.querySelector('.opening-read').value) || 0;
                var closingRead = parseFloat(row.querySelector('.closing-read').value) || 0;
                var itemRate = parseFloat(row.querySelector('.item-rate').value) || 0;
                var testingQuantity = parseFloat(row.querySelector('.testing-quantity').value) || 0;

                var saleQuantity = closingRead - openingRead;
                saleQuantity = Math.max(saleQuantity, 0); // Ensure sale quantity is non-negative
                row.querySelector('.sale-quantity').value = saleQuantity.toFixed(2);

                var amount = saleQuantity * itemRate;
                amount = Math.max(amount, 0); // Ensure amount is non-negative
                row.querySelector('.total-amount').value = amount.toFixed(2);

                var deductedSaleQuantity = Math.max(saleQuantity - testingQuantity, 0);
                var deductedAmount = deductedSaleQuantity * itemRate;
                deductedAmount = Math.max(deductedAmount, 0); // Ensure deducted amount is non-negative
                row.querySelector('.sale-quantity').value = deductedSaleQuantity.toFixed(2);
                row.querySelector('.total-amount').value = deductedAmount.toFixed(2);
            });
        }

        // Function to update summary table totals
        function updateSummaryTableTotals() {
            var summaryRows = document.querySelectorAll('#shiftsummary-table tbody tr');
            var summaryTotals = {
                quantity: 0,
                taxableAmount: 0,
                amount: 0
            };

            var detailRows = document.querySelectorAll('#shiftdetail-table tbody tr');
            detailRows.forEach(function (row) {
                var productName = row.cells[5].innerText; // Assuming the product name is in the third column
                var quantity = parseFloat(row.querySelector('.sale-quantity').value) || 0;
                var taxableAmount = parseFloat(row.querySelector('.total-amount').value) || 0;
                var amount = taxableAmount;

                if (summaryTotals[productName]) {
                    summaryTotals[productName].quantity += quantity;
                    summaryTotals[productName].taxableAmount += taxableAmount;
                    summaryTotals[productName].amount += amount;
                } else {
                    summaryTotals[productName] = {
                        quantity: quantity,
                        taxableAmount: taxableAmount,
                        amount: amount
                    };
                }

                summaryTotals.quantity += quantity;
                summaryTotals.taxableAmount += taxableAmount;
                summaryTotals.amount += amount;
            });

            summaryRows.forEach(function (row) {
                var productName = row.cells[0].innerText;
                if (summaryTotals[productName]) {
                    row.querySelector('.item-quantity').textContent = summaryTotals[productName].quantity.toFixed(2);
                    row.querySelector('.taxable-amount').textContent = summaryTotals[productName].taxableAmount.toFixed(2);
                    row.querySelector('.total-amount').textContent = summaryTotals[productName].amount.toFixed(2);
                } else {
                    row.querySelector('.total-row-quantity').textContent = summaryTotals.quantity.toFixed(2);
                    row.querySelector('.total-row-taxable').textContent = summaryTotals.taxableAmount.toFixed(2);
                    row.querySelector('.total-row-amount').textContent = summaryTotals.amount.toFixed(2);
                }
            });
        }
    </script>
}